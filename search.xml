<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>26 app APP之仅在Java层的加密</title>
      <link href="2021/12/27/26-app-APP%E4%B9%8B%E4%BB%85%E5%9C%A8Java%E5%B1%82%E7%9A%84%E5%8A%A0%E5%AF%86/"/>
      <url>2021/12/27/26-app-APP%E4%B9%8B%E4%BB%85%E5%9C%A8Java%E5%B1%82%E7%9A%84%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="定位并抠出加密的-Java-代码-稍微调整后"><a href="#定位并抠出加密的-Java-代码-稍微调整后" class="headerlink" title="定位并抠出加密的 Java 代码,稍微调整后"></a>定位并抠出加密的 Java 代码,稍微调整后</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// package OooO0O0.OooO.OooO00o.OooOOo;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token comment">/* compiled from: proguard-dict.txt */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OooOo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO00o</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">^</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> i3<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i2 <span class="token operator">&amp;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">,</span> <span class="token keyword">int</span> i4<span class="token punctuation">,</span> <span class="token keyword">int</span> i5<span class="token punctuation">,</span> <span class="token keyword">int</span> i6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">OooO0oo</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token class-name">OooO00o</span><span class="token punctuation">(</span>i2<span class="token punctuation">,</span> i3<span class="token punctuation">,</span> i4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> i5<span class="token punctuation">,</span> i6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0OO</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&amp;</span> i3<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> i2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i2 <span class="token operator">&amp;</span> i3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0Oo</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">,</span> <span class="token keyword">int</span> i4<span class="token punctuation">,</span> <span class="token keyword">int</span> i5<span class="token punctuation">,</span> <span class="token keyword">int</span> i6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">OooO0oo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token class-name">OooO0OO</span><span class="token punctuation">(</span>i2<span class="token punctuation">,</span> i3<span class="token punctuation">,</span> i4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> i5<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1518500249</span><span class="token punctuation">,</span> i6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0o</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">,</span> <span class="token keyword">int</span> i4<span class="token punctuation">,</span> <span class="token keyword">int</span> i5<span class="token punctuation">,</span> <span class="token keyword">int</span> i6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">OooO0oo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token class-name">OooO0o0</span><span class="token punctuation">(</span>i2<span class="token punctuation">,</span> i3<span class="token punctuation">,</span> i4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> i5<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1859775393</span><span class="token punctuation">,</span> i6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0o0</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>i <span class="token operator">^</span> i2<span class="token punctuation">)</span> <span class="token operator">^</span> i3<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">OooO0oo</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>i <span class="token operator">>>></span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> i2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;&lt;</span> i2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    public String OooO(byte[] bArr)&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">OooO</span><span class="token punctuation">(</span><span class="token class-name">String</span> page<span class="token punctuation">,</span> <span class="token class-name">String</span> currentTimeMillis<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"page="</span><span class="token operator">+</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        long currentTimeMillis = System.currentTimeMillis();</span>        stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>currentTimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bArr <span class="token operator">=</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span> <span class="token class-name">OooO0oO</span> <span class="token operator">=</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">(</span>bArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1732584193</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">271733879</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1732584194</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i4 <span class="token operator">=</span> <span class="token number">271733878</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i5 <span class="token operator">&lt;</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">64</span><span class="token punctuation">;</span> i5<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i6<span class="token punctuation">;</span>            <span class="token keyword">int</span> i7<span class="token punctuation">;</span>            <span class="token keyword">int</span> i8<span class="token punctuation">;</span>            <span class="token keyword">int</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i9<span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> iArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i6 <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i6<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i7 <span class="token operator">=</span> <span class="token punctuation">(</span>i5 <span class="token operator">*</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i6 <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                iArr<span class="token punctuation">[</span>i6<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i7 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i7<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i7 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">OooO0oO</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i7 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> iArr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            i7 <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">int</span> i10 <span class="token operator">=</span> i2<span class="token punctuation">;</span>            <span class="token keyword">int</span> i11 <span class="token operator">=</span> i3<span class="token punctuation">;</span>            <span class="token keyword">int</span> i12 <span class="token operator">=</span> i4<span class="token punctuation">;</span>            i6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>i6 <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i8 <span class="token operator">=</span> iArr2<span class="token punctuation">[</span>i6<span class="token punctuation">]</span><span class="token punctuation">;</span>                i7 <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">(</span>i7<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> i12<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">OooO0O0</span> <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">(</span>i12<span class="token punctuation">,</span> i7<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i11 <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">(</span>i11<span class="token punctuation">,</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">,</span> i7<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i10 <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">(</span>i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">,</span> i7<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i6<span class="token operator">++</span><span class="token punctuation">;</span>                i12 <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            iArr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            i8 <span class="token operator">=</span> i7<span class="token punctuation">;</span>            i6 <span class="token operator">=</span> i12<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i9 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i9 <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i9<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i12 <span class="token operator">=</span> iArr2<span class="token punctuation">[</span>i9<span class="token punctuation">]</span><span class="token punctuation">;</span>                i8 <span class="token operator">=</span> <span class="token class-name">OooO0Oo</span><span class="token punctuation">(</span>i8<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i12<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i6 <span class="token operator">=</span> <span class="token class-name">OooO0Oo</span><span class="token punctuation">(</span>i6<span class="token punctuation">,</span> i8<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i12 <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i11 <span class="token operator">=</span> <span class="token class-name">OooO0Oo</span><span class="token punctuation">(</span>i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> i8<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i12 <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i10 <span class="token operator">=</span> <span class="token class-name">OooO0Oo</span><span class="token punctuation">(</span>i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> i8<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i12 <span class="token operator">+</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            iArr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            i7 <span class="token operator">=</span> i8<span class="token punctuation">;</span>            i9 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>i9 <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i8 <span class="token operator">=</span> iArr2<span class="token punctuation">[</span>i9<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token class-name">OooO0O0</span> <span class="token operator">=</span> <span class="token class-name">OooO0o</span><span class="token punctuation">(</span>i7<span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i6 <span class="token operator">=</span> <span class="token class-name">OooO0o</span><span class="token punctuation">(</span>i6<span class="token punctuation">,</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">,</span> i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i11 <span class="token operator">=</span> <span class="token class-name">OooO0o</span><span class="token punctuation">(</span>i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">,</span> i10<span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i10 <span class="token operator">=</span> <span class="token class-name">OooO0o</span><span class="token punctuation">(</span>i10<span class="token punctuation">,</span> i11<span class="token punctuation">,</span> i6<span class="token punctuation">,</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">,</span> iArr<span class="token punctuation">[</span>i8 <span class="token operator">+</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                i9<span class="token operator">++</span><span class="token punctuation">;</span>                i7 <span class="token operator">=</span> <span class="token class-name">OooO0O0</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            i <span class="token operator">+=</span> i7<span class="token punctuation">;</span>            i2 <span class="token operator">+=</span> i10<span class="token punctuation">;</span>            i3 <span class="token operator">+=</span> i11<span class="token punctuation">;</span>            i4 <span class="token operator">+=</span> i6<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%02x%02x%02x%02x"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i4<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token class-name">OooO0oO</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bArr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> length <span class="token operator">=</span> bArr<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span> arrayList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> valueOf <span class="token operator">:</span> bArr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>valueOf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">512</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> length<span class="token punctuation">)</span> <span class="token operator">>>></span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> arrayList<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">OooOo</span> signcls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OooOo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">long</span> currentTimeMillis <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>currentTimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                                    <span class="token comment">//page  time</span>           <span class="token class-name">String</span> sign <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">signcls<span class="token punctuation">.</span></span>OooO</span><span class="token punctuation">(</span><span class="token string">"18"</span><span class="token punctuation">,</span> currentTimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sign<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用-python-调用打包好的-jar-包"><a href="#使用-python-调用打包好的-jar-包" class="headerlink" title="使用 python 调用打包好的 jar 包"></a>使用 python 调用打包好的 jar 包</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 引入jpype模块</span><span class="token keyword">import</span> jpype<span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> httpx<span class="token keyword">from</span> jpype <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># # 加载刚才打包的jar文件</span>jarpath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"/spider26.jar"</span><span class="token punctuation">)</span><span class="token comment"># # 获取jvm.dll 的文件路径</span>jvmPath <span class="token operator">=</span> jpype<span class="token punctuation">.</span>getDefaultJVMPath<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># # 开启jvm</span>jpype<span class="token punctuation">.</span>startJVM<span class="token punctuation">(</span>jvmPath<span class="token punctuation">,</span><span class="token string">"-ea"</span><span class="token punctuation">,</span> <span class="token string">"-Djava.class.path=%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>jarpath<span class="token punctuation">)</span><span class="token punctuation">)</span>test <span class="token operator">=</span> JPackage<span class="token punctuation">(</span><span class="token string">"com.spider.sign26"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>OooOo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">req</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>sign<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Host'</span><span class="token punctuation">:</span> <span class="token string">'www.python-spider.com'</span><span class="token punctuation">,</span>        <span class="token string">'accept-language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.8'</span><span class="token punctuation">,</span>        <span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Linux; U; Android 10; zh-cn; M2007J1SC Build/QKQ1.200419.002) AppleWebKit/533.1 (KHTML, like Gecko) Version/5.0 Mobile Safari/533.1'</span><span class="token punctuation">,</span>        <span class="token string">'content-type'</span><span class="token punctuation">:</span> <span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">,</span>        <span class="token string">'accept-encoding'</span><span class="token punctuation">:</span> <span class="token string">'gzip'</span><span class="token punctuation">,</span>        <span class="token string">'cache-control'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'page'</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span>        <span class="token string">'sign'</span><span class="token punctuation">:</span> sign<span class="token punctuation">,</span>        <span class="token string">'t'</span><span class="token punctuation">:</span> t    <span class="token punctuation">&#125;</span>    <span class="token keyword">with</span> httpx<span class="token punctuation">.</span>Client<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> http2<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>        response <span class="token operator">=</span> client<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'https://www.python-spider.com/api/app1'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">return</span> response<span class="token keyword">def</span> <span class="token function">fomatNum</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    val_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"page: "</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>        sing_time <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        signcls <span class="token operator">=</span> test<span class="token punctuation">.</span>OooO<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sing_time<span class="token punctuation">)</span>        rsp <span class="token operator">=</span> req<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>signcls<span class="token punctuation">,</span>sing_time<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>rsp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> val <span class="token keyword">in</span> fomatNum<span class="token punctuation">(</span>rsp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            val_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>val_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 关闭</span>    jpype<span class="token punctuation">.</span>shutdownJVM<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># %%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 反爬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次简单的邮箱解密</title>
      <link href="2021/12/16/%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E9%82%AE%E7%AE%B1%E8%A7%A3%E5%AF%86/"/>
      <url>2021/12/16/%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E9%82%AE%E7%AE%B1%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="查看请求相关信息"><a href="#查看请求相关信息" class="headerlink" title="查看请求相关信息"></a>查看请求相关信息</h3><blockquote><p>愉快的做着 Xpath 工程师，以及灵活的 Ctrl C、Ctrl V，突然就不灵了，一看响应邮箱地址被加密了。</p></blockquote><ol><li><p>查看原始请求响应</p><blockquote><p>发现邮箱的地方，提示开启 js，并且标签属性 data-spamprotect 的值像是待解密的数据<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_1.png" alt="img"></p></blockquote></li><li><p>查看 js 执行位置</p><blockquote><p>根据以往的经验，应该是在某个地方获取 data-spamprotect 的属性值，然后解密，所以直接以它为关键字进行搜索，<br>除了一些静态文本，只有一个 js 文件出现了这个关键词，点进去<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_2.png" alt="img"></p></blockquote></li></ol><blockquote><p>在这个位置下个端点，然后刷新页面，成功断住了，然后不停的单步调试，直到邮箱地址出现<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_3.png" alt="img"></p></blockquote><blockquote><p>经过 N 次 F11 后，邮箱地址终于出现了；<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_4.png" alt="img"></p></blockquote><blockquote><p>将调用堆栈跳到上一步，这个 o 函数执行前的状态，看一下参数<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_5.png" alt="img"></p></blockquote><blockquote><p>在控制台看看两个参数是啥，发现不知道是个啥，但是在上方找到了赋值的地方；简单分析后，都是根据<code>t.data(&quot;spamprotect&quot;)</code>计算得到的，<br>而这个值，就是待解密的响应标签中的属性值<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_6.png" alt="img"></p></blockquote><blockquote><p>将代码抠出整理，把动态获取密文，写死试试，发现能成功计算完成<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_7.png" alt="img"></p></blockquote><h3 id="本地调试-amp-python还原"><a href="#本地调试-amp-python还原" class="headerlink" title="本地调试 &amp; python还原"></a>本地调试 &amp; <code>python</code>还原</h3><ol><li><p>扣出代码，本地调试</p><blockquote><p>直接把<code>function o()</code>的内容抠出，并去除不参与计算的部分；然后用 node 自带的 base64 方法手动去补充 atob 这样的函数；<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211216175532_8.png" alt="img"></p></blockquote></li><li><p>python 还原</p><blockquote><p>把 js 翻译一遍，需注意部分有注释</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">’‘’    python 执行‘’‘<span class="token keyword">def</span> <span class="token function">data2email</span><span class="token punctuation">(</span>data_spamprotect<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># o = function(e, t) &#123;...</span>    <span class="token keyword">import</span> base64    <span class="token comment"># atob(tobj.data("spamprotect"))</span>    data_spamprotect_decode <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>data_spamprotect<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> data_spamprotect_decode<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    a <span class="token operator">=</span> data_spamprotect_decode    n <span class="token operator">=</span> a<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">o</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span>        e <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment"># e = e.split(""),   js 中 split(""),就是把每个字符都拆出来，对应 python 的其实是 list 函数</span>        t <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token comment"># t = t.split("");</span>        <span class="token keyword">for</span> a <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># String.fromCharCode(str) 是将 ascii 编码转为一个字符，对应 python 中的 chr()</span>            <span class="token comment"># str.charCodeAt(0) 是将字符串中第一个字符，转为 ascii 码；对应 python 的 ord()</span>            e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>a <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>e<span class="token punctuation">)</span>    emali <span class="token operator">=</span> o<span class="token punctuation">(</span>a<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">return</span> emalidata_spamprotect <span class="token operator">=</span> <span class="token string">"ODA1ODJhY2FmMGE3ZDNhYmQwMWY3MzljNDpKUVxWVxNNFQ5ZBFsBcwgEEx1aD1JfFwdR"</span><span class="token keyword">print</span><span class="token punctuation">(</span> data2email<span class="token punctuation">(</span>data_spamprotect<span class="token punctuation">)</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h3><blockquote><p>没啥好总结的</p></blockquote><h2 id="代码验证"><a href="#代码验证" class="headerlink" title="代码验证"></a>代码验证</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  node 中执行</span>window <span class="token operator">=</span> globalThiswindow<span class="token punctuation">.</span><span class="token function-variable function">atob</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">b64Encoded</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>b64Encoded<span class="token punctuation">,</span> <span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>window<span class="token punctuation">.</span><span class="token function-variable function">btoa</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">b64Encoded</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>b64Encoded<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>data_spamprotect <span class="token operator">=</span> <span class="token string">"ODA1ODJhY2FmMGE3ZDNhYmQwMWY3MzljNDpKUVxWVxNNFQ5ZBFsBcwgEEx1aD1JfFwdR"</span><span class="token keyword">function</span> <span class="token constant">SDK</span><span class="token punctuation">(</span><span class="token parameter">data_spamprotect</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> tobj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    tobj<span class="token punctuation">.</span><span class="token function-variable function">data</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">return</span> data_spamprotect<span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> e<span class="token punctuation">,</span>         a <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> tobj<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"spamprotect"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">atob</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token function-variable function">o</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>                e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">^</span> t<span class="token punctuation">[</span>a <span class="token operator">%</span> t<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>    <span class="token keyword">return</span> o<span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"SDK: "</span><span class="token punctuation">,</span> <span class="token constant">SDK</span><span class="token punctuation">(</span>data_spamprotect<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 反爬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> 逆向思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>headers签名逆向</title>
      <link href="2021/12/13/headers%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/"/>
      <url>2021/12/13/headers%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="查看请求相关信息"><a href="#查看请求相关信息" class="headerlink" title="查看请求相关信息"></a>查看请求相关信息</h3><ol><li>查看请求流程<blockquote><p>变化的参数有两个，主要是 authorization<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_1.png" alt="img"></p></blockquote></li></ol><blockquote><p>先看看调用堆栈信息，可以发现主要是 ROHReact.js 和 VM<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_2.png" alt="img"></p></blockquote><blockquote><p>先去搜一下关键字 authorization；可以发现一个是 string 类型的一段js代码；另一个是调用堆栈里的那个js文件，<br>先从字符串代码开始跟踪，个人也是人为可能性大一点<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_3.png" alt="img"></p></blockquote><blockquote><p>搜索这段代码的变量名，可以找到 使用 eval 执行他的地方，打赏断点，跟进去调试<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_4.png" alt="img"></p></blockquote><blockquote><p>可以看到成功断住了，单步跟下去<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_5.png" alt="img"></p></blockquote><blockquote><p>跟进去之后发现了关键字<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_6.png" alt="img"></p></blockquote><blockquote><p>并且经过搜索找到了下方的引用位置，打上断点，执行到这个位置，发现赋值就在这里；<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_7.png" alt="img"></p></blockquote><h3 id="分析动态参数"><a href="#分析动态参数" class="headerlink" title="分析动态参数"></a>分析动态参数</h3><ol><li><p>扣出代码</p><blockquote><p>把刚才跟进去的那个文件代码，全部复制到本地, 并在 headers 赋值后的地方输出一下，<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_8.png" alt="img"></p></blockquote></li><li><p>调试</p><blockquote><p>整理一下，主动调用这段代码，并从 debug 中把需要的 config 参数复制出来;<br>然后执行发现报错 Cannot read property ‘assertDefined’ of undefined<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_9.png" alt="img"></p></blockquote></li></ol><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_10.png" alt="img"></p><ol start="3"><li><p>继续扣代码</p><blockquote><p>选中目标代码，然后点进去，然后添加到本地文件中<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_11.png" alt="img"></p></blockquote></li><li><p>再次调试</p><blockquote><p>将复制进来的代码整理，去掉重复的变量声明字段，再次执行，出现 document is not defined<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_12.png" alt="img"></p></blockquote></li><li><p>排查错误</p><blockquote><p>发现只有一处引用，并且只是获取了一下 hostname，那么直接写死就完事, 把 document 的地方注释掉<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_13.png" alt="img"></p></blockquote></li></ol><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_14.png" alt="img"></p><ol start="6"><li><p>使用 node 的 CryptoJS</p><blockquote><p>再次执行缺少加解密库，可以直接安装 <code>npm install crypto-js</code> , 然后再引用就 OK<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_15.png" alt="img"></p></blockquote></li><li><p>收尾</p><blockquote><p>再次执行出现 axios is not defined 错误，搜索定位到返回值是 <code>return axios(signedRequest);</code>，<br>我们不需要封装请求，毕竟上方可以看到，已经成功输出 headers 中我们需要的值，所以 直击返回就好 <code>return signedRequest</code><br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_16.png" alt="img"></p></blockquote></li></ol><blockquote><p>完结撒花<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211213151406_17.png" alt="img"></p></blockquote><h3 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h3><blockquote><p>根据搜索定位到关键参数位置，发现对方使用 eval 去执行的相关代码，找到 eval 执行位置，断点跟进去，确认参数生成位置，扣代码<br>根据扣下来的代码，补环境，补参数，整理不需要的部分（axios， document）<br>安装加密库 crypto-js<br>为了方便使用 python 调用，将 js 文件倒数第二行改为 <code>var signedRequest = awsSigV4Client.makeRequest</code></p></blockquote><h2 id="代码验证"><a href="#代码验证" class="headerlink" title="代码验证"></a>代码验证</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> execjs<span class="token keyword">import</span> os<span class="token keyword">import</span> requestsBASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span><span class="token string">'__file__'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span> <span class="token string">r'/'</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>BASE_DIR<span class="token punctuation">&#125;</span></span><span class="token string">/blog.js"</span></span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    js_code <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>js_env <span class="token operator">=</span> execjs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>js_complied <span class="token operator">=</span> js_env<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>js_code<span class="token punctuation">)</span>request <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"verb"</span><span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>    <span class="token string">"path"</span><span class="token punctuation">:</span> <span class="token string">"/roh/army/sbv"</span><span class="token punctuation">,</span>    <span class="token string">"headers"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"queryParams"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"Person"</span><span class="token punctuation">,</span>        <span class="token string">"ID"</span><span class="token punctuation">:</span> <span class="token string">"10015"</span><span class="token punctuation">,</span>        <span class="token string">"version"</span><span class="token punctuation">:</span> <span class="token string">"2.00"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>rst <span class="token operator">=</span> js_complied<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">'signedRequest'</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># 'authority': '2te05r2hbk.execute-api.us-east-1.amazonaws.com',</span>    <span class="token string">'pragma'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>    <span class="token string">'cache-control'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>    <span class="token string">'sec-ch-ua'</span><span class="token punctuation">:</span> <span class="token string">'" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"'</span><span class="token punctuation">,</span>    <span class="token string">'accept'</span><span class="token punctuation">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span>    <span class="token string">'authorization'</span><span class="token punctuation">:</span> <span class="token string">'AWS4-HMAC-SHA256 Credential=AKIAQJFZ7KCKQ5RKEVFL/20211210/us-east-1/execute-api/aws4_request, SignedHeaders=accept;host;x-amz-date, Signature=68b3238747d919ac607c2db288bb893d784b91d2cce93d3ca973405281976837'</span><span class="token punctuation">,</span>    <span class="token string">'x-amz-date'</span><span class="token punctuation">:</span> <span class="token string">'20211210T095518Z'</span><span class="token punctuation">,</span>    <span class="token string">'sec-ch-ua-mobile'</span><span class="token punctuation">:</span> <span class="token string">'?0'</span><span class="token punctuation">,</span>    <span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36'</span><span class="token punctuation">,</span>    <span class="token string">'sec-ch-ua-platform'</span><span class="token punctuation">:</span> <span class="token string">'"macOS"'</span><span class="token punctuation">,</span>    <span class="token string">'origin'</span><span class="token punctuation">:</span> <span class="token string">'https://army.togetherweserved.com'</span><span class="token punctuation">,</span>    <span class="token string">'sec-fetch-site'</span><span class="token punctuation">:</span> <span class="token string">'cross-site'</span><span class="token punctuation">,</span>    <span class="token string">'sec-fetch-mode'</span><span class="token punctuation">:</span> <span class="token string">'cors'</span><span class="token punctuation">,</span>    <span class="token string">'sec-fetch-dest'</span><span class="token punctuation">:</span> <span class="token string">'empty'</span><span class="token punctuation">,</span>    <span class="token string">'referer'</span><span class="token punctuation">:</span> <span class="token string">'https://army.togetherweserved.com/'</span><span class="token punctuation">,</span>    <span class="token string">'accept-language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>params <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token string">'ID'</span><span class="token punctuation">,</span> <span class="token string">'10015'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span> <span class="token string">'Person'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'version'</span><span class="token punctuation">,</span> <span class="token string">'2.00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span>headers<span class="token punctuation">[</span><span class="token string">'authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rst<span class="token punctuation">[</span><span class="token string">'headers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span>headers<span class="token punctuation">[</span><span class="token string">'x-amz-date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rst<span class="token punctuation">[</span><span class="token string">'headers'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x-amz-date'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://2te05r2hbk.execute-api.us-east-1.amazonaws.com/roh/army/sbv'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 反爬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> 逆向思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非装饰器实现一个请求重试模块</title>
      <link href="2021/12/06/%E9%9D%9E%E8%A3%85%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E9%87%8D%E8%AF%95%E6%A8%A1%E5%9D%97/"/>
      <url>2021/12/06/%E9%9D%9E%E8%A3%85%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E9%87%8D%E8%AF%95%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="通过反射和无名参数实现"><a href="#通过反射和无名参数实现" class="headerlink" title="通过反射和无名参数实现"></a>通过反射和无名参数实现</h2><blockquote><p>代码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">retryRequest</span><span class="token punctuation">(</span>req_type<span class="token operator">=</span><span class="token string">'get'</span><span class="token punctuation">,</span> retry_type<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> sleep_sec<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    req_type: 请求类型  get/post    retry_type: 重试次数， >=1时按传参次数；==0时开启无限重试至成功    sleep_sec: 重试间隔，单位/秒    kwargs: 不定数量动态参数    '''</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">try_except</span><span class="token punctuation">(</span>req_type<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            response <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>requests<span class="token punctuation">,</span> req_type<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>  <span class="token comment"># 通过反射动态调用函数</span>            <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span> <span class="token keyword">return</span> response<span class="token punctuation">,</span> <span class="token boolean">True</span>            <span class="token keyword">else</span><span class="token punctuation">:</span> <span class="token keyword">return</span> response<span class="token punctuation">,</span> <span class="token boolean">False</span>  <span class="token comment"># 非 200 响应，则继续重试</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> response<span class="token punctuation">)</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                response <span class="token operator">=</span> <span class="token string">"requests 请求未完成"</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> response<span class="token punctuation">)</span>            <span class="token keyword">return</span> response<span class="token punctuation">,</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> retry_type<span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>retry_type<span class="token punctuation">)</span><span class="token punctuation">:</span>            response<span class="token punctuation">,</span> req_statu <span class="token operator">=</span> try_except<span class="token punctuation">(</span>req_type<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>            <span class="token keyword">if</span> req_statu<span class="token punctuation">:</span> <span class="token keyword">break</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>sleep_sec<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            response<span class="token punctuation">,</span> req_statu <span class="token operator">=</span> try_except<span class="token punctuation">(</span>req_type<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>            <span class="token keyword">if</span> req_statu<span class="token punctuation">:</span> <span class="token keyword">break</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>sleep_sec<span class="token punctuation">)</span>    <span class="token keyword">return</span> response<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsl的cookie逆向，标准案例</title>
      <link href="2021/10/13/jsl%E7%9A%84cookie%E9%80%86%E5%90%91%EF%BC%8C%E6%A0%87%E5%87%86%E6%A1%88%E4%BE%8B/"/>
      <url>2021/10/13/jsl%E7%9A%84cookie%E9%80%86%E5%90%91%EF%BC%8C%E6%A0%87%E5%87%86%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="查看请求相关信息"><a href="#查看请求相关信息" class="headerlink" title="查看请求相关信息"></a>查看请求相关信息</h3><ol><li>查看请求流程<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_1.png" alt="img"></li></ol><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_2.png" alt="img"></p><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_3.png" alt="img"></p><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_4.png" alt="img"></p><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_5.png" alt="img"></p><h3 id="分析动态参数"><a href="#分析动态参数" class="headerlink" title="分析动态参数"></a>分析动态参数</h3><ol><li><p>将第一次响应内容的 js 代码全部复制下来，然后去 nodejs 环境跑一下<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_6.png" alt="img"></p></li><li><p>补头</p><blockquote><p>可以看到有报错，那么接下来就是把所有的报错解决掉（补环境）<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_7.png" alt="img"></p></blockquote></li></ol><blockquote><p>根据上图调整，已经没有报错了，然后打印一下 document 发现 __jsl_clearance_s 已经可以拿到了</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    cookie<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span>location <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    href<span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    pathname<span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>    search<span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>从第一次响应复制的 js 代码console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>但是任务并没有结束，可以看到第二次请求，带上了 cookie 的两个参数仍然是失败的，<br>看一下他的响应内容<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_8.png" alt="img"></p></blockquote><blockquote><p>可以看到相应内容还是一段 js 代码，并且比之前的更加复杂，先不做任何处理，直接放进现有补头的环境中执行，<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_13.png" alt="img"></p></blockquote><blockquote><p>有新的报错，我们需要重复之前的操作进行补头，然后又出现了新的报错类型<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_9.png" alt="img"></p></blockquote><blockquote><p>userAgent这个属性，并不是直接在 window 下的，而是在 window.navigator.userAgent, 这里给补一个浏览器ua（随便复制一个就行）, 然后继续调试<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_10.png" alt="img"></p></blockquote><blockquote><p>可以看到，已经没有报错了，但是并没有在全局变量中拿到值，根据分析 第二次响应内容种的代码，发现他使用了setTimeout 函数<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_11.png" alt="img"><br>setTimeout 函数的作用是将一个方法，在延时一段时间后执行，它的第一个参数就是需要执行的内容，这里可以将setTimeout 函数重写，然后将接收到的需要执行的方法，在全局中执行，那么 setTimeout 里 cookie 赋值的操作，就暴露给全局，就能拿到了</p></blockquote><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20211013100136_12.png" alt="img"></p><blockquote><p>在添加重写的 setTimeout 后，就轻松的拿到了想要的结果，至此，js 逆向工作全部结束</p></blockquote><h3 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h3><blockquote><p>拿到数据总共需要请求三次该网站，第一次不做任何处理请求，获得 __jsluid_s 的值；<br>第二次需要根据第一次请求中response header中的 __jsluid_s，以及第一次请求响应中的 js 代码去计算 __jsl_clearance_s，然后带上这两个参数去请求；<br>第三次需要根据第一次请求中response header中的 __jsluid_s，以及第二次请求响应中的 js 代码去计算 __jsl_clearance_s，然后带上这两个参数去请求，就拿到了正确的html内容</p></blockquote><h2 id="代码验证"><a href="#代码验证" class="headerlink" title="代码验证"></a>代码验证</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> execjs<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>http <span class="token keyword">import</span> HtmlResponse<span class="token keyword">def</span> <span class="token function">formatHeader</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">:</span>    header <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    hd <span class="token operator">=</span> hd<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"        "</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> hd<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        kv <span class="token operator">=</span> i<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>kv<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">:</span>            kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">':'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            header<span class="token punctuation">[</span>kv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>    <span class="token keyword">return</span> header<span class="token keyword">def</span> <span class="token function">runJsCode</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">:</span>    html <span class="token operator">=</span> HtmlResponse<span class="token punctuation">(</span>        url<span class="token operator">=</span>url<span class="token punctuation">,</span> <span class="token comment"># 设置一个url, 推荐当前使用方式</span>        body<span class="token operator">=</span>body <span class="token comment"># 选择编码格式</span>    <span class="token punctuation">)</span>    cookie_code <span class="token operator">=</span> html<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">'script::text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>        js_env <span class="token operator">=</span> execjs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>        js_code <span class="token operator">=</span> <span class="token triple-quoted-string string">'''        document = &#123;            cookie: ""        &#125;        setTimeout = function(fuc,str)&#123;            fuc()        &#125;        window = &#123;            navigator: &#123;                userAgent:'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36'            &#125;        &#125;        location = &#123;&#125;        '''</span><span class="token operator">+</span>cookie_code<span class="token operator">+</span><span class="token triple-quoted-string string">'''        function getCookie()&#123;            return document.cookie        &#125;    '''</span>        <span class="token comment"># 先编译js解密代码</span>    js_compiled <span class="token operator">=</span> js_env<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>js_code<span class="token punctuation">)</span>    <span class="token comment"># 执行js_func得到最终结果</span>    result <span class="token operator">=</span> js_compiled<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">'getCookie'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">';max'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">return</span> resulthd <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9    Accept-Encoding: gzip, deflate, br    Accept-Language: zh-CN,zh;q=0.9    Cache-Control: no-cache    Connection: keep-alive    Cookie: ""    Host: www.cnvd.org.cn    Pragma: no-cache    sec-ch-ua: "Chromium";v="94", "Google Chrome";v="94", ";Not A Brand";v="99"    sec-ch-ua-mobile: ?0    sec-ch-ua-platform: "Windows"    Sec-Fetch-Dest: document    Sec-Fetch-Mode: navigate    Sec-Fetch-Site: none    Sec-Fetch-User: ?1    Upgrade-Insecure-Requests: 1    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36'''</span>header<span class="token operator">=</span>formatHeader<span class="token punctuation">(</span>hd<span class="token punctuation">)</span>article_url <span class="token operator">=</span> <span class="token string">'https://www.cnvd.org.cn/webinfo/list?type=2'</span>proxy <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'https'</span><span class="token punctuation">:</span> <span class="token string">'http://127.0.0.1:10809'</span><span class="token punctuation">&#125;</span>  <span class="token comment"># 我本地的翻墙代理</span>rsp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_url<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">)</span>js_cookie <span class="token operator">=</span> runJsCode<span class="token punctuation">(</span><span class="token string">'https://www.cnvd.org.cn'</span><span class="token punctuation">,</span> rsp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>header<span class="token punctuation">[</span><span class="token string">'Cookie'</span><span class="token punctuation">]</span> <span class="token operator">=</span> js_cookiersp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_url<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>js_cookie <span class="token operator">=</span> runJsCode<span class="token punctuation">(</span><span class="token string">'https://www.cnvd.org.cn'</span><span class="token punctuation">,</span> rsp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>__jsluid_s <span class="token operator">=</span> rsp<span class="token punctuation">.</span>cookies<span class="token punctuation">[</span><span class="token string">'__jsluid_s'</span><span class="token punctuation">]</span>header<span class="token punctuation">[</span><span class="token string">'Cookie'</span><span class="token punctuation">]</span> <span class="token operator">=</span> js_cookie<span class="token operator">+</span><span class="token string">";__jsluid_s="</span><span class="token operator">+</span>__jsluid_srsp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_url<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>js_cookie <span class="token operator">=</span> runJsCode<span class="token punctuation">(</span><span class="token string">'https://www.cnvd.org.cn'</span><span class="token punctuation">,</span> rsp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>header<span class="token punctuation">[</span><span class="token string">'Cookie'</span><span class="token punctuation">]</span> <span class="token operator">=</span> js_cookie<span class="token operator">+</span><span class="token string">";__jsluid_s="</span><span class="token operator">+</span>__jsluid_srsp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_url<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rsp<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 反爬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> 逆向思路 </tag>
            
            <tag> jsl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20210917-头条rpc获获取 _signature 参数</title>
      <link href="2021/09/17/20210917-%E5%A4%B4%E6%9D%A1rpc%E8%8E%B7%E8%8E%B7%E5%8F%96-signature-%E5%8F%82%E6%95%B0/"/>
      <url>2021/09/17/20210917-%E5%A4%B4%E6%9D%A1rpc%E8%8E%B7%E8%8E%B7%E5%8F%96-signature-%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="获取sekiro-web-client-js"><a href="#获取sekiro-web-client-js" class="headerlink" title="获取sekiro_web_client.js"></a>获取sekiro_web_client.js</h2><p><a href="https://sekiro.virjar.com/sekiro-doc/assets/sekiro_web_client.js">https://sekiro.virjar.com/sekiro-doc/assets/sekiro_web_client.js</a></p><h2 id="JS-注入代码"><a href="#JS-注入代码" class="headerlink" title="JS 注入代码"></a>JS 注入代码</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">guid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0x10000</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">S4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SekiroClient</span><span class="token punctuation">(</span><span class="token string">"wss://sekiro.virjar.com/business/register?group=xxx&amp;clientId="</span> <span class="token operator">+</span> <span class="token function">guid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">"clientTime"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"SekiroTest："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">registerAction</span><span class="token punctuation">(</span><span class="token string">"_signature"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> tt_url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">atob</span><span class="token punctuation">(</span>request<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// console.log("tt_url:   "+tt_url)</span>    <span class="token function">resolve</span><span class="token punctuation">(</span> window<span class="token punctuation">.</span>byted_acrawler<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>byted_acrawler<span class="token punctuation">,</span><span class="token punctuation">&#123;</span>url<span class="token operator">:</span> tt_url<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>在浏览器打开 <a href="https://www.toutiao.com/">https://www.toutiao.com/</a></li><li>将 sekiro_web_client.js 和 JS 注入代码 中的内容复制到浏览器控制台</li><li>通过调用获取参数 <a href="https://sekiro.virjar.com/business/invoke?group=xxx&amp;action=_signature&amp;url=aHR0cHM6Ly93d3cudG91dGlhby5jb20vYXBpL3BjL2xpc3QvZmVlZD9vZmZzZXQ9MCZjaGFubmVsX2lkPTk0MzQ5NTQ5Mzk1Jm1heF9iZWhvdF90aW1lPTAmY2F0ZWdvcnk9cGNfcHJvZmlsZV9jaGFubmVs">https://sekiro.virjar.com/business/invoke?group=xxx&amp;action=_signature&amp;url=aHR0cHM6Ly93d3cudG91dGlhby5jb20vYXBpL3BjL2xpc3QvZmVlZD9vZmZzZXQ9MCZjaGFubmVsX2lkPTk0MzQ5NTQ5Mzk1Jm1heF9iZWhvdF90aW1lPTAmY2F0ZWdvcnk9cGNfcHJvZmlsZV9jaGFubmVs</a></li></ol><blockquote><p>说明：在 3. 中 url(需要获取的头条接口url，不带_signature参数) 参数为类似于 <a href="https://www.toutiao.com/api/pc/list/feed?offset=0&amp;channel_id=94349549395&amp;max_behot_time=0&amp;category=pc_profile_channel">https://www.toutiao.com/api/pc/list/feed?offset=0&amp;channel_id=94349549395&amp;max_behot_time=0&amp;category=pc_profile_channel</a> 的base64编码</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>URL 参数解析成字典</title>
      <link href="2021/08/12/URL-%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E6%88%90%E5%AD%97%E5%85%B8/"/>
      <url>2021/08/12/URL-%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E6%88%90%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>讲 URL 中的查询字符串参数解析成字典<br>url如 <code>https://bipartisanpolicy.org/all-content/?policy_areas%5B%5D=Corporate+Governance&amp;sort=date</code></p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlencode<span class="token punctuation">,</span> parse_qs<span class="token punctuation">,</span> urlparseurl <span class="token operator">=</span> <span class="token string">"https://bipartisanpolicy.org/all-content/?policy_areas%5B%5D=Corporate+Governance&amp;sort=date"</span>query_url <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>queryparse_qs_url <span class="token operator">=</span> parse_qs<span class="token punctuation">(</span>query_url<span class="token punctuation">)</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> parse_qs_url<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 输出</span><span class="token punctuation">&#123;</span><span class="token string">'policy_areas[]'</span><span class="token punctuation">:</span> <span class="token string">'Corporate Governance'</span><span class="token punctuation">,</span> <span class="token string">'sort'</span><span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>以上操作可以合并为</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">url <span class="token operator">=</span> <span class="token string">"https://bipartisanpolicy.org/all-content/?policy_areas%5B%5D=Corporate+Governance&amp;sort=date"</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> parse_qs<span class="token punctuation">(</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 输出</span><span class="token punctuation">&#123;</span><span class="token string">'policy_areas[]'</span><span class="token punctuation">:</span> <span class="token string">'Corporate Governance'</span><span class="token punctuation">,</span> <span class="token string">'sort'</span><span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> urllib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac-环境配置-ADB</title>
      <link href="2021/08/09/Mac-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-ADB/"/>
      <url>2021/08/09/Mac-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-ADB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>背景： 我这里因为已经下载好了 Android Studio 所以 不用去单独下载 adb 了，只需要配置一下文件即可<br>如果你也安装了 Android Studio 那么可以在这个路径下找到 adb 脚本<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/202108090035_1.png" alt="img"><br>拷贝路径后</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 修改文件，没有的话会创建vim ~&#x2F;.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export ANDROID_HOME&#x3D;&quot;&#x2F;Users&#x2F;用户名写自己的&#x2F;Library&#x2F;Android&#x2F;sdk&quot;export PATH&#x3D;$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;&#x2F;toolsexport PATH&#x3D;$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;&#x2F;platform-tools# 如果是单独下载的 adb 工具，直接只添加下边这一行应该也是可以的 #（确保你填写的文件夹路径下有 adb 脚本）export PATH&#x3D;$&#123;PATH&#125;:你的adb文件夹路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>然后执行</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">source ~&#x2F;.bash_profileadb --version# 有以下输出就代表OK了Android Debug Bridge version 1.0.41Version 31.0.3-7562133Installed as &#x2F;Users&#x2F;xxxxxx&#x2F;Library&#x2F;Android&#x2F;sdk&#x2F;platform-tools&#x2F;adb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
            <tag> ADB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 环境配置--Homebrew</title>
      <link href="2021/08/08/Mac-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Homebrew/"/>
      <url>2021/08/08/Mac-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-Homebrew/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于国内网络问题，官方提供的安装命令会失败，经过搜索查询，从知乎得到一个解决方式<br><a href="https://www.zhihu.com/question/35928898/answer/924797299">原文回答</a></p></blockquote><h2 id="不使用官方的链接下载，换成以下命令"><a href="#不使用官方的链接下载，换成以下命令" class="headerlink" title="不使用官方的链接下载，换成以下命令"></a>不使用官方的链接下载，换成以下命令</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;bin&#x2F;zsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;gitee.com&#x2F;cunkai&#x2F;HomebrewCN&#x2F;raw&#x2F;master&#x2F;Homebrew.sh)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
            <tag> Homebrew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2——js加密——简易动态js加密解析——简单</title>
      <link href="2021/07/01/2%E2%80%94%E2%80%94js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E7%AE%80%E6%98%93%E5%8A%A8%E6%80%81js%E5%8A%A0%E5%AF%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95/"/>
      <url>2021/07/01/2%E2%80%94%E2%80%94js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E7%AE%80%E6%98%93%E5%8A%A8%E6%80%81js%E5%8A%A0%E5%AF%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.python-spider.com/challenge/2">题目地址</a></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="查看请求信息"><a href="#查看请求信息" class="headerlink" title="查看请求信息"></a>查看请求信息</h3><ol><li><p>刷新页面会，打开控制台会无限 debugger，把它过掉<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701143216_1.png" alt="img"></p></li><li><p>然后再次刷新就正常了</p><blockquote><p>经过尝试，会发现在第一个请求的时候，<code>cookie</code> 中的 <code>sign</code> 值就已经在请求头了，所以应该是本地计算完成的，<br>接下来就是找到计算的位置</p></blockquote></li></ol><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><blockquote><p>一般我会用 XHR 断点，但是这里不属于 XHR 请求方式，所以直接下 script事件监听断点<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701144107_2.png" alt="img"></p></blockquote><blockquote><p>为了方便查看，断点下好后，先去 <code>cookies</code> 里把 <code>sign</code> 给删掉，<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701144359_3.png" alt="img"></p></blockquote><blockquote><p>然后就可以刷新页面开始调试了，就这样走一次 F8 看一下cookie 变化（也可以直接hook cookie 就没这么麻烦），留意每次调试的文件有用<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701144854_4.png" alt="img"></p></blockquote><blockquote><p>在经过一次卡顿后，出现了目标，并且上方调试时走过的文件也没了，<br>这样我们没法回到上一次（堆栈也没有啊），所以刚刚提示的留意就派上用场了<br>知道在什么位置了，那么就重新操作一遍，删除 cookie sign 刷新页面<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701145226_5.png" alt="img"></p></blockquote><blockquote><p>经过再次调试，来到了cookie变化前一个断点文件<br>格式化之后，搜一下cookie，看了看，因该就是这块的了<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701150119_6.png" alt="img"></p></blockquote><blockquote><p>下个断点，看一下，这就是需要的 <code>sign</code> 了，到这里，答案已经可以出来了，把 <code>c</code> 的值改为题目的时间戳, 再依次执行就可以了<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210701150358_7.png" alt="img"></p></blockquote><blockquote><p>不过为了学习，我们还是把它用<code>python</code>还原一下,下边先对这几行代码进行逐步分析</p></blockquote><h3 id="分析cookie参数"><a href="#分析cookie参数" class="headerlink" title="分析cookie参数"></a>分析cookie参数</h3><ol><li>分析逻辑<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'valueOf'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1625118526378   </span>token <span class="token operator">=</span> window<span class="token punctuation">[</span><span class="token string">"btoa"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>     a<span class="token punctuation">[</span><span class="token string">"eheZE"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>         a<span class="token punctuation">[</span><span class="token string">"VezOH"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// "aiding_win"</span>        a<span class="token punctuation">[</span><span class="token string">"gFoHV"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>String<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// "1625108819386"   python:str(c)</span>    <span class="token punctuation">)</span> <span class="token comment">// "aiding_win1625108819386"    "aiding_win" + str(c)    python: "aiding_win"+ str(c) </span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 对 "aiding_win1625108819386" 进行 base64 编码</span>md <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token string">'XQoGX'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>        hex_md5<span class="token punctuation">,</span>         window<span class="token punctuation">[</span><span class="token string">"btoa"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>        a<span class="token punctuation">[</span><span class="token string">'gNohH'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>             a<span class="token punctuation">[</span><span class="token string">"VezOH"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// "aiding_win"</span>            a<span class="token punctuation">[</span><span class="token string">"sibsM"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                 String<span class="token punctuation">,</span>                 Math<span class="token punctuation">[</span><span class="token string">"round"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                     a<span class="token punctuation">[</span><span class="token string">"xHDyr"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">0x3e8</span><span class="token punctuation">)</span>  <span class="token comment">// 1625108819.386    python:c/1000</span>                <span class="token punctuation">)</span>  <span class="token comment">// 对 1625108819.386 四舍五入取整 == 1625108819    python:round(c/1000)</span>            <span class="token punctuation">)</span> <span class="token comment">// "1625108819"  转字符串类型   js: String(1625108819)    python: str(round(c/1000))</span>        <span class="token punctuation">)</span> <span class="token comment">// "aiding_win1625108819"     "aiding_win"+"1625108819"   python: "aiding_win"+str(round(c/1000))</span>    <span class="token punctuation">)</span> <span class="token comment">// "YWlkaW5nX3dpbjE2MjUxMDg4MTk="       base64_str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//   "1eb0ec7446090df575752a23a4511427"   对 base64 编码后的字符串进行 md5 编码     hex_md5(base64_str)   </span>document<span class="token punctuation">[</span><span class="token string">"cookie"</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token string">"ttTXc"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>     a<span class="token punctuation">[</span><span class="token string">"ttTXc"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>         a<span class="token punctuation">[</span><span class="token string">"vqcDR"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>             a<span class="token punctuation">[</span><span class="token string">"ITeIW"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                a<span class="token punctuation">[</span><span class="token string">'DTGFR'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                    a<span class="token punctuation">[</span><span class="token string">"Bxtms"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                        a<span class="token punctuation">[</span><span class="token string">"RojwX"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//  "sign="</span>                        Math<span class="token punctuation">[</span><span class="token string">"round"</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                            a<span class="token punctuation">[</span><span class="token string">'xHDyr'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">0x3e8</span><span class="token punctuation">)</span>  <span class="token comment">// 1625108819.386    python:c/1000</span>                        <span class="token punctuation">)</span><span class="token comment">// 对 1625108819.386 四舍五入取整，结果为：1625108819    python:round(c/1000)</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// "sign=1625108819"     "sign="+ 1625108819</span>                    <span class="token string">'~'</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// "sign=1625108819~"     "sign=1625108819"+'~'</span>                token            <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//  "sign=1625108819~aiding_win1625108819386"     "sign=1625108819~"+ token</span>            <span class="token string">'|'</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">//  "sign=1625108819~aiding_win1625108819386|"     "sign=1625108819~aiding_win1625108819386"+'|'</span>        md    <span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token comment">//   "sign=1625108819~aiding_win1625108819386|1eb0ec7446090df575752a23a4511427"    "sign=1625108819~aiding_win1625108819386|"+ md </span>    a<span class="token punctuation">[</span><span class="token string">"nZuLl"</span><span class="token punctuation">]</span>  <span class="token comment">// "; path=/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//   "sign=1625108819~aiding_win1625108819386|1eb0ec7446090df575752a23a4511427; path=/"      "sign=1625108819~aiding_win1625108819386|1eb0ec7446090df575752a23a4511427"+"; path=/"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="完整代码，python还原计算"><a href="#完整代码，python还原计算" class="headerlink" title="完整代码，python还原计算"></a>完整代码，python还原计算</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> time<span class="token comment"># c = int(time.time()*1000)</span>c <span class="token operator">=</span> <span class="token number">1587102734000</span>token <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token string">"aiding_win"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span> <span class="token punctuation">)</span>md <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token string">"aiding_win"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span> <span class="token builtin">round</span><span class="token punctuation">(</span> c<span class="token operator">/</span><span class="token number">1000</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>cookie <span class="token operator">=</span> <span class="token string">"sign="</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span> <span class="token builtin">round</span><span class="token punctuation">(</span> c<span class="token operator">/</span><span class="token number">1000</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'~'</span> <span class="token operator">+</span> token <span class="token operator">+</span> <span class="token string">'|'</span> <span class="token operator">+</span> md <span class="token operator">+</span> <span class="token string">"; path=/"</span><span class="token keyword">print</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 猿人学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> 逆向思路 </tag>
            
            <tag> 猿人学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1——js加密——无混淆js加密——简单</title>
      <link href="2021/06/30/1%E2%80%94%E2%80%94js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E6%97%A0%E6%B7%B7%E6%B7%86js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95/"/>
      <url>2021/06/30/1%E2%80%94%E2%80%94js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E6%97%A0%E6%B7%B7%E6%B7%86js%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.python-spider.com/challenge/1">题目地址</a></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="查看请求信息"><a href="#查看请求信息" class="headerlink" title="查看请求信息"></a>查看请求信息</h3><ol><li><p>统计数量，那么需要得到每一页的数据，先看看每一页的数据请求流程<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630150211_1.png" alt="img"></p></li><li><p>会发现每次翻页会有2个请求，依次点开看看<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630150630_2.png" alt="img"></p></li><li><p>发现有个 <code>safe</code> 参数是在变化的<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630150826_3.png" alt="img"></p></li><li><p>cookie 中有个参数编码看起来有点问题,肯定没法直接用<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630150936_4.png" alt="img"></p></li><li><p>依据浏览器工具查看一下, 得到正常编码字符<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630151311_5.png" alt="img"></p></li></ol><h3 id="分析动态参数"><a href="#分析动态参数" class="headerlink" title="分析动态参数"></a>分析动态参数</h3><ol><li>safe搜索<blockquote><p>先使用搜索看看加密逻辑，很容易就可以搜到（如果没搜出来，使用<code>ctrl+shift+r</code>强刷新再搜索试试）<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630151902_6.png" alt="img"></p></blockquote></li></ol><blockquote><p>看看代码<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630152000_7.png" alt="img"></p></blockquote><blockquote><p>把上边三行复制下来，执行看看，对比看，应该是对的<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210630152041_8.png" alt="img"></p></blockquote><h2 id="代码验证"><a href="#代码验证" class="headerlink" title="代码验证"></a>代码验证</h2><h3 id="用-python-还原-safe-参数算法"><a href="#用-python-还原-safe-参数算法" class="headerlink" title="用 python 还原 safe 参数算法"></a>用 python 还原 safe 参数算法</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># var a = '9622';</span>a <span class="token operator">=</span> <span class="token string">'9622'</span><span class="token comment"># var timestamp = String(Date.parse(new Date()) / 1000);</span>timestamp <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment"># var tokens = hex_md5(window.btoa(a + timestamp));</span><span class="token comment">## 1. window.btoa(a + timestamp)</span><span class="token comment">### 直接这么做有个问题，就是会被 b'' 包住</span>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> a <span class="token operator">+</span> timestamp <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">b'OTYyMjE2MjUwMzg5NzI='</span><span class="token comment">### 所以稍微改动一下，就正常了</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> a <span class="token operator">+</span> timestamp <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span> <span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'OTYyMjE2MjUwMzg5NzI='</span><span class="token comment">## 2. python3 使用 md5 需要指定编码，不然会报错 报错为： Unicode-objects must be encoded before hashing</span>btoa_str <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> a <span class="token operator">+</span> timestamp <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span> <span class="token punctuation">)</span>tokens <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span> btoa_str<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="一些意外情况"><a href="#一些意外情况" class="headerlink" title="一些意外情况"></a>一些意外情况</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># cookie中有一个上边提取出来的值，可能会报编码问题</span><span class="token string">'enable_GG思密达'</span><span class="token punctuation">:</span> <span class="token string">'true'</span>cookies2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'enable_GG思密达'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>    <span class="token string">'__yr_token__'</span><span class="token punctuation">:</span> <span class="token string">'b301cDHZoDT************************************RQR8WAZYF3ZrXAZPABUMG3kJWQNBYRY%3D'</span><span class="token punctuation">,</span>    <span class="token string">'Hm_lvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1623315686'</span><span class="token punctuation">,</span>    <span class="token string">'vaptchaNetwayTime'</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'vaptchaNetway'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>    <span class="token string">'sessionid'</span><span class="token punctuation">:</span> <span class="token string">'9g1elieze5**********7n41e9kvw'</span><span class="token punctuation">,</span>    <span class="token string">'no-alert'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>    <span class="token string">'Hm_lpvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1625032842'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment"># 报错</span>UnicodeEncodeError<span class="token punctuation">:</span> <span class="token string">'latin-1'</span> codec can't encode characters <span class="token keyword">in</span> position <span class="token number">282</span><span class="token operator">-</span><span class="token number">284</span><span class="token punctuation">:</span> ordinal <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token comment"># 经过验证 修改一下编码就可以</span>cookies2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'enable_GG思密达'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"latin1"</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">'true'</span><span class="token punctuation">,</span>    <span class="token string">'__yr_token__'</span><span class="token punctuation">:</span> <span class="token string">'b301cDHZoDT************************************RQR8WAZYF3ZrXAZPABUMG3kJWQNBYRY%3D'</span><span class="token punctuation">,</span>    <span class="token string">'Hm_lvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1623315686'</span><span class="token punctuation">,</span>    <span class="token string">'vaptchaNetwayTime'</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'vaptchaNetway'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>    <span class="token string">'sessionid'</span><span class="token punctuation">:</span> <span class="token string">'9g1elieze5**********7n41e9kvw'</span><span class="token punctuation">,</span>    <span class="token string">'no-alert'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>    <span class="token string">'Hm_lpvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1625032842'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完整代码，修改为自己的cookie信息"><a href="#完整代码，修改为自己的cookie信息" class="headerlink" title="完整代码，修改为自己的cookie信息"></a>完整代码，修改为自己的cookie信息</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> pprint <span class="token keyword">import</span> pprint<span class="token keyword">import</span> time<span class="token keyword">from</span> jsonpath <span class="token keyword">import</span> jsonpath<span class="token keyword">import</span> json<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> base64count_zhao <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cookies1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Hm_lvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1623315686'</span><span class="token punctuation">,</span>        <span class="token string">'vaptchaNetwayTime'</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'vaptchaNetway'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        <span class="token string">'sessionid'</span><span class="token punctuation">:</span> <span class="token string">'9g1elieze************41e9kvw'</span><span class="token punctuation">,</span>        <span class="token string">'no-alert'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token string">'Hm_lpvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1625032842'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    headers1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Connection'</span><span class="token punctuation">:</span> <span class="token string">'keep-alive'</span><span class="token punctuation">,</span>        <span class="token string">'Content-Length'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        <span class="token string">'Pragma'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>        <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>        <span class="token string">'sec-ch-ua'</span><span class="token punctuation">:</span> <span class="token string">'" Not;A Brand";v="99", "Google Chrome";v="91", "Chromium";v="91"'</span><span class="token punctuation">,</span>        <span class="token string">'sec-ch-ua-mobile'</span><span class="token punctuation">:</span> <span class="token string">'?0'</span><span class="token punctuation">,</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36'</span><span class="token punctuation">,</span>        <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'*/*'</span><span class="token punctuation">,</span>        <span class="token string">'Origin'</span><span class="token punctuation">:</span> <span class="token string">'https://www.python-spider.com'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Site'</span><span class="token punctuation">:</span> <span class="token string">'same-origin'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Mode'</span><span class="token punctuation">:</span> <span class="token string">'cors'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Dest'</span><span class="token punctuation">:</span> <span class="token string">'empty'</span><span class="token punctuation">,</span>        <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'https://www.python-spider.com/challenge/1'</span><span class="token punctuation">,</span>        <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    response1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'https://www.python-spider.com/cityjson'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers1<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies1<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    pprint<span class="token punctuation">(</span>response1<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token comment"># safe = hashlib.md5(str(base64.b64encode(('9622'+str(int(time.time()))).encode('utf-8')),'utf-8').encode(encoding='utf-8')).hexdigest()</span>    a <span class="token operator">=</span> <span class="token string">'9622'</span>    timestamp <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    btoa_str <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span> <span class="token punctuation">(</span> a <span class="token operator">+</span> timestamp <span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span> <span class="token punctuation">)</span>    tokens <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span> btoa_str<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        cookies2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'enable_GG思密达'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"latin1"</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token string">'__yr_token__'</span><span class="token punctuation">:</span> <span class="token string">'b301cD************************AZYF3ZrXAZPABUMG3kJWQNBYRY%3D'</span><span class="token punctuation">,</span>        <span class="token string">'Hm_lvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1623315686'</span><span class="token punctuation">,</span>        <span class="token string">'vaptchaNetwayTime'</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'vaptchaNetway'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        <span class="token string">'sessionid'</span><span class="token punctuation">:</span> <span class="token string">'9g1elie***************41e9kvw'</span><span class="token punctuation">,</span>        <span class="token string">'no-alert'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token string">'Hm_lpvt_337e99a01a907a08d00bed4a1a52e35d'</span><span class="token punctuation">:</span> <span class="token string">'1625032842'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    headers2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Connection'</span><span class="token punctuation">:</span> <span class="token string">'keep-alive'</span><span class="token punctuation">,</span>        <span class="token string">'Pragma'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>        <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>        <span class="token string">'sec-ch-ua'</span><span class="token punctuation">:</span> <span class="token string">'" Not;A Brand";v="99", "Google Chrome";v="91", "Chromium";v="91"'</span><span class="token punctuation">,</span>        <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'application/json, text/javascript, */*; q=0.01'</span><span class="token punctuation">,</span>        <span class="token string">'timestamp'</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'X-Requested-With'</span><span class="token punctuation">:</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">,</span>        <span class="token string">'sec-ch-ua-mobile'</span><span class="token punctuation">:</span> <span class="token string">'?0'</span><span class="token punctuation">,</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36'</span><span class="token punctuation">,</span>        <span class="token string">'safe'</span><span class="token punctuation">:</span> tokens<span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Site'</span><span class="token punctuation">:</span> <span class="token string">'same-origin'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Mode'</span><span class="token punctuation">:</span> <span class="token string">'cors'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Dest'</span><span class="token punctuation">:</span> <span class="token string">'empty'</span><span class="token punctuation">,</span>        <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'https://www.python-spider.com/challenge/1'</span><span class="token punctuation">,</span>        <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    params2 <span class="token operator">=</span> <span class="token punctuation">(</span>        <span class="token punctuation">(</span><span class="token string">'page'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">(</span><span class="token string">'count'</span><span class="token punctuation">,</span> <span class="token string">'14'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    response2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.python-spider.com/challenge/api/json'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers2<span class="token punctuation">,</span> params<span class="token operator">=</span>params2<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies2<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    response2_json <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response2<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> jsonpath<span class="token punctuation">(</span>response2_json<span class="token punctuation">,</span><span class="token string">'$..infos'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            pprint<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">'招'</span> <span class="token keyword">in</span> i<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                count_zhao <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>response2_json<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>count_zhao<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 猿人学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
            <tag> 逆向思路 </tag>
            
            <tag> 猿人学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中求列表的 交、并、差集</title>
      <link href="2021/06/17/python%E4%B8%AD%E6%B1%82%E5%88%97%E8%A1%A8%E7%9A%84-%E4%BA%A4%E3%80%81%E5%B9%B6%E3%80%81%E5%B7%AE%E9%9B%86/"/>
      <url>2021/06/17/python%E4%B8%AD%E6%B1%82%E5%88%97%E8%A1%A8%E7%9A%84-%E4%BA%A4%E3%80%81%E5%B9%B6%E3%80%81%E5%B7%AE%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有如下两个列表</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="求交集"><a href="#求交集" class="headerlink" title="求交集"></a>求交集</h2><h3 id="1-两个列表共有部分"><a href="#1-两个列表共有部分" class="headerlink" title="1. 两个列表共有部分"></a>1. 两个列表共有部分</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token builtin">set</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="求并集"><a href="#求并集" class="headerlink" title="求并集"></a>求并集</h2><h3 id="1-两个列表合并"><a href="#1-两个列表合并" class="headerlink" title="1. 两个列表合并"></a>1. 两个列表合并</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">set</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="求差集"><a href="#求差集" class="headerlink" title="求差集"></a>求差集</h2><h3 id="1-列表-a-中有，b-中没有的部分"><a href="#1-列表-a-中有，b-中没有的部分" class="headerlink" title="1. 列表 a 中有，b 中没有的部分"></a>1. 列表 a 中有，b 中没有的部分</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span>difference<span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 同 list(set(a)-set(b))</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-列表-b-中有，a-中没有的部分"><a href="#2-列表-b-中有，a-中没有的部分" class="headerlink" title="2. 列表 b 中有，a 中没有的部分"></a>2. 列表 b 中有，a 中没有的部分</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span>difference<span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 同 list(set(b)-set(a))</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在CentOS上使用Python3，出现&#39;ascii&#39;编码问题</title>
      <link href="2021/05/25/%E5%9C%A8CentOS%E4%B8%8A%E4%BD%BF%E7%94%A8Python3%EF%BC%8C%E5%87%BA%E7%8E%B0-ascii-%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <url>2021/05/25/%E5%9C%A8CentOS%E4%B8%8A%E4%BD%BF%E7%94%A8Python3%EF%BC%8C%E5%87%BA%E7%8E%B0-ascii-%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h2><blockquote><p>本地 Windows10: python3.8.5<br>     MAC OS: python3.9<br>CentOS : python3.9</p></blockquote><blockquote><p>将项目上传到服务器后，运行出现<br><code>UnicodeEncodeError: ‘ascii’ codec can’t encode characters in ordinal not in range(128)</code><br>经过一番排查，发现是Linux的坑，因为我在 Ipython 中 print(中文) 一样报这个错误，最后经过搜索，改Linux服务器的编码就好了</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 查看当前编码</span><span class="token keyword">import</span> syssys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>encoding<span class="token comment"># 你的输出结果可能和我不同，但只要不是utf-8，就都有可能出现以上问题</span><span class="token string">'US-ASCII'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 在 &#96;~&#x2F;.bash_profile&#96; 中添加以下一行代码，我这里使用vimvim ~&#x2F;.bash_profile# 添加  &#96;export LANG&#x3D;&quot;en_US.UTF-8&quot;&#96;# 保存退出后，更新配置使，更改生效source ~&#x2F;.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可以用 python交互 再次查看编码，发现是 UTF-8 就可以了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python，自己实现一个简易进度条</title>
      <link href="2021/05/24/%E7%94%A8python%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
      <url>2021/05/24/%E7%94%A8python%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="用-Python-实现一个简易的进度条，不需要任何第三方包"><a href="#用-Python-实现一个简易的进度条，不需要任何第三方包" class="headerlink" title="用 Python 实现一个简易的进度条，不需要任何第三方包"></a>用 Python 实现一个简易的进度条，不需要任何第三方包</h2><blockquote><p>直接上代码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#-*- coding:utf-8 -*-</span><span class="token keyword">import</span> time<span class="token keyword">import</span> systask <span class="token operator">=</span> <span class="token number">100</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 计算进度条字符串</span>    a <span class="token operator">=</span> <span class="token string">'*'</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>task<span class="token operator">*</span><span class="token number">100</span> <span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">' '</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span> <span class="token number">100</span><span class="token operator">-</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>task<span class="token operator">*</span><span class="token number">100</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token comment"># 计算百分比</span>    b <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>task<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token comment"># 刷新缓冲区</span>    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 不换行输出</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\r[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string">] */- </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">4]</span><span class="token punctuation">&#125;</span></span><span class="token string">%"</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>效果如下</p></blockquote><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/202105241.png" alt="img"></p><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/202105242.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中字符串模板的使用</title>
      <link href="2021/05/20/python%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%9D%BF%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2021/05/20/python%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%9D%BF%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="在开发中，遇到多个字符串，动态更改其中不同位置的参数"><a href="#在开发中，遇到多个字符串，动态更改其中不同位置的参数" class="headerlink" title="在开发中，遇到多个字符串，动态更改其中不同位置的参数"></a>在开发中，遇到多个字符串，动态更改其中不同位置的参数</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"https://csbaonline.org/about/media-center/P&#123;动态参数&#125;?filter=news"</span><span class="token punctuation">,</span>              <span class="token string">"https://csbaonline.org/about/news/P&#123;动态参数&#125;"</span><span class="token punctuation">]</span><span class="token comment"># 需求</span><span class="token triple-quoted-string string">'''    https://csbaonline.org/about/media-center/P1?filter=news    https://csbaonline.org/about/news/P1    https://csbaonline.org/about/media-center/P2?filter=news    https://csbaonline.org/about/news/P2'''</span><span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> start_urls<span class="token punctuation">:</span>        url ??? 拆分拼接? ，这不够pythonic，比较简单那粗暴<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可以使用 python string 中的 Template，制作字符串模板</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> string <span class="token keyword">import</span> Template<span class="token comment"># 定义模板，需要动态变化的地方，使用 $变量名 的方式作为占位符</span>start_urls <span class="token operator">=</span> <span class="token punctuation">[</span>Template<span class="token punctuation">(</span><span class="token string">"https://csbaonline.org/about/media-center/P$p?filter=news"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              Template<span class="token punctuation">(</span><span class="token string">"https://csbaonline.org/about/news/P$p"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> start_urls<span class="token punctuation">:</span>        <span class="token comment"># 给模板中的变量赋值，变量可以定义多个</span>        url <span class="token operator">=</span> url<span class="token punctuation">.</span>substitute<span class="token punctuation">(</span>p<span class="token operator">=</span>page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>看起来简洁、舒服多了…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django后台执行</title>
      <link href="2021/05/19/Django%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C/"/>
      <url>2021/05/19/Django%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="让-django-在服务器挂起执行，不中断"><a href="#让-django-在服务器挂起执行，不中断" class="headerlink" title="让 django 在服务器挂起执行，不中断"></a>让 django 在服务器挂起执行，不中断</h2><blockquote><p>在 服务器中启动 django 通常是<br><code>python python manage.py runserver 0.0.0.0:8000</code><br>但是离开 ssh 连接的窗口 程序通常也会被终止，以下有两种 方法挂起执行</p></blockquote><h3 id="1-以-nohup-不挂断执行"><a href="#1-以-nohup-不挂断执行" class="headerlink" title="1. 以 nohup 不挂断执行"></a>1. 以 nohup 不挂断执行</h3><p><code>nohup python python manage.py runserver 0.0.0.0:8000 &amp;</code></p><blockquote><p>启动后 还会在当前目录产生 nohup.log 相当于日志记录的作用</p></blockquote><h3 id="2-screen"><a href="#2-screen" class="headerlink" title="2. screen"></a>2. screen</h3><blockquote><p>此方法针对，nohup 启动的项目 无法以 IP：Port 的方式访问api，也是更高级的用法</p><ul><li><ol><li>先检查是否安装了 screen</li></ol></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&gt;&gt;&gt;screen -S 名称 如果成功跳转到窗口 证明已安装，终端报错则，进行安装&gt;&gt;&gt;sudo apt install screen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><ol start="2"><li>安装之后 就以 创建新screen 并且执行命令的方式启动:<br><code>&gt;&gt;&gt;screen -S test python hello.py</code></li></ol></li></ul></blockquote><blockquote><ul><li><ol start="3"><li>但是，有时候，我们的操作不仅仅这么简单，需要跳转路径且切换虚拟环境等等，<br>那么，就先写一个shell 脚本，帮助我们只用一行完成所有操作<br>如</li></ol></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F;home&#x2F;tangsong&#x2F;  #切换路径 source venvo&#x2F;bin&#x2F;activate  # 激活虚拟环境 ps：没有则跳过cd LetGo&#x2F;python3 manage.py runserver 0.0.0.0:9000  # 启动项目<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><ol start="4"><li>然后 用screen 命令启动<br><code>screen -S test ./start.sh</code><br><code>注意 ： start.sh 启动脚本，一定要放在，窗口创建的初始目录下</code></li></ol></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 错误合集</title>
      <link href="2021/05/19/Python-%E9%94%99%E8%AF%AF%E5%90%88%E9%9B%86/"/>
      <url>2021/05/19/Python-%E9%94%99%E8%AF%AF%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3错误"><a href="#Python3错误" class="headerlink" title="Python3错误"></a>Python3错误</h1><h2 id="字符编码问题"><a href="#字符编码问题" class="headerlink" title="字符编码问题"></a>字符编码问题</h2><h3 id="1-u4567-u753r5转换中文"><a href="#1-u4567-u753r5转换中文" class="headerlink" title="1. \u4567\u753r5转换中文"></a>1. \u4567\u753r5转换中文</h3><blockquote><p>向接口模拟请求时，你可能会收到如下响应</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"xxxxx"</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> \u4567\u753r5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>一般情况，只需要encode编码就行了</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">str_content <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token comment">#或者 gbk</span><span class="token keyword">print</span><span class="token punctuation">(</span>str_content<span class="token punctuation">)</span>OUT<span class="token punctuation">:</span>中文内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>但在Python3 中 你可能会遇到如下情况<br><code>\\u4567\\u753r5</code><br>这时我们需要先编码，再解码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">str_content <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"unicode_escape"</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str_content<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> 中文内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h2><h3 id="1-字符串"><a href="#1-字符串" class="headerlink" title="1. 字符串 =="></a>1. 字符串 ==</h3><blockquote><p>在Windows下 通过 xpath 获取文本内容，返回得到字符串,如：<br><code>https://www.qujiaosuo.pro/</code><br>我需要在找到此链接时，进入站内，达到更多操作，用 基本的判断，并不能成功,如==判断</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> getstr <span class="token operator">==</span> <span class="token string">"https://www.qujiaosuo.pro/"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"找到链接"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>但是匹配一直不成功，多番分析发现问题是 获取的文本字符串末尾 被系统自动追加 ‘\0’,验证看看：</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">"打印获取的字符串长度"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>getstr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">27</span><span class="token string">"打印需要的目标长度"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">"https://www.qujiaosuo.pro"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">26</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>所以，只要去掉末尾的 ‘\0’ 就好了,在此对比就可以了,这里简单粗暴处理下</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">getstr <span class="token operator">=</span> getstr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>getstr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">26</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h1 id="pip错误"><a href="#pip错误" class="headerlink" title="pip错误"></a>pip错误</h1><h2 id="pip更新"><a href="#pip更新" class="headerlink" title="pip更新"></a>pip更新</h2><h3 id="1-linux下更新pip时，-出现错误"><a href="#1-linux下更新pip时，-出现错误" class="headerlink" title="1. linux下更新pip时， 出现错误"></a>1. linux下更新pip时， 出现错误</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>File <span class="token string">"/usr/bin/pip3"</span><span class="token punctuation">,</span> line <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token keyword">from</span> pip <span class="token keyword">import</span> mainImportError<span class="token punctuation">:</span> cannot <span class="token keyword">import</span> name <span class="token string">'main'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>解决方法：</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># vim /usr/bin/pip   (若是pip3，就改为pip3)</span><span class="token comment">#将导包改为如下即可：</span><span class="token keyword">from</span> pip<span class="token punctuation">.</span>_internal <span class="token keyword">import</span> main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 错误解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python多线程及线程数控制</title>
      <link href="2021/05/19/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%8F%8A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8E%A7%E5%88%B6/"/>
      <url>2021/05/19/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%8F%8A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="在python中控制线程最大数"><a href="#在python中控制线程最大数" class="headerlink" title="在python中控制线程最大数"></a>在python中控制线程最大数</h2><h3 id="极简代码示例"><a href="#极简代码示例" class="headerlink" title="极简代码示例"></a>极简代码示例</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> threading<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">io_task</span><span class="token punctuation">(</span>sema<span class="token punctuation">,</span> taks_num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 占用一个线程空位</span>    sema<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'调用线程&#123;0&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>taks_num<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 模拟IO耗时</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 任务完成，释放占用</span>    sema<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># 设置最大线程数为2</span>    sema <span class="token operator">=</span> threading<span class="token punctuation">.</span>Semaphore<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 模拟任务数为10</span>    task_workers <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment"># 开始任务</span>    <span class="token keyword">for</span> taks_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>task_workers<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 线程调用</span>        t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>io_task<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>sema<span class="token punctuation">,</span> taks_num<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 等待所有线程结束，继续往下操作</span>    t<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">'''        do soming    '''</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"所有任务完成！"</span><span class="token punctuation">)</span><span class="token comment"># 输出结果</span>调用线程<span class="token number">0</span>调用线程<span class="token number">1</span>调用线程<span class="token number">2</span>调用线程<span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>所有任务完成！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h3><blockquote><p>由以上程序及运行结果可以得知，</p></blockquote><ul><li><ol><li>首先需要设置线程最大任务数    <code>sema = threading.Semaphore(value=2)</code></li></ol></li><li><ol start="2"><li>线程调用并传入信号量</li></ol></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>io_task<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>sema<span class="token punctuation">,</span> taks_num<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><ol start="3"><li>在被调用方法 <code>io_task(sema, taks_num)</code> 中<br>进行线程资源占用申请 <code>sema.acquire()</code> 此方法会申请占用一个资源位置，最大可用线程数 -1 , 此方法需在 IO 操作前调用才能达到效果<br>线程资源释放 <code>sema.release()</code> 此方法会释放一个资源位置，最大可用线程数 +1 , 此方法需在 IO 操作后调用</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js逆向的一些思路尝试，websocket调用</title>
      <link href="2021/05/17/js%E9%80%86%E5%90%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF%E5%B0%9D%E8%AF%95%EF%BC%8Cwebsocket%E8%B0%83%E7%94%A8/"/>
      <url>2021/05/17/js%E9%80%86%E5%90%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF%E5%B0%9D%E8%AF%95%EF%BC%8Cwebsocket%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="引发"><a href="#引发" class="headerlink" title="引发"></a>引发</h2><blockquote><p>对于web爬虫遇到的反爬，一般少不了扣js，对于一些复杂的js，抠出来也不方便还原，很费时间；<br>由此，可以用webdriver/jsdom/nodejs去执行js，由python去调用，但上述几个方法都有弊端。<br>比如资源消耗，非真实浏览器被检测的问题，主要是伪装真实浏览器的麻烦程度，那我想，为什么不干脆由真实浏览器去做这些事呢。</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><blockquote><p>如果我有一个server端作为调用参数任务的下发者，那么在真实浏览器构建一个client端去接收任务，并返回结果就可以达到参数调用即获取；<br>这样我不用关心检测，也不用关心目标网站是否更新了内部算法，只要他暴露的参数计算函数名没变，我就可以调用，省了很多头发啊</p></blockquote><h2 id="简易的demo"><a href="#简易的demo" class="headerlink" title="简易的demo"></a>简易的demo</h2><h3 id="server"><a href="#server" class="headerlink" title="* server"></a>* server</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> asyncio<span class="token keyword">import</span> websockets<span class="token keyword">import</span> json<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">echo</span><span class="token punctuation">(</span>websocket<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> websocket<span class="token punctuation">:</span>                <span class="token keyword">await</span> return_task<span class="token punctuation">(</span>message<span class="token punctuation">)</span>        <span class="token keyword">await</span> send_task<span class="token punctuation">(</span>websocket<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"获得连接："</span><span class="token punctuation">,</span>message<span class="token punctuation">)</span>        <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">send_task</span><span class="token punctuation">(</span>websocket<span class="token punctuation">)</span><span class="token punctuation">:</span>    task <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"输入任务名："</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>send<span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">return_task</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>    recv_json <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>message<span class="token punctuation">)</span>    <span class="token keyword">if</span> recv_json<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"params"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"获得参数"</span><span class="token punctuation">,</span>message<span class="token punctuation">)</span>    asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>websockets<span class="token punctuation">.</span>serve<span class="token punctuation">(</span>echo<span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> <span class="token number">4200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_forever<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在真实场景中，需要把 send_task()中的input改成自己的 任务生产消息队列，进行获取任务，每个任务包含任务Id，任务操作类型，让客户端知道干什么<br>在return_task()中获取客户端返回的结果，把获得的参数信息，发到 结果消费队列，供爬虫使用，爬虫根据id等到自己的参数就去执行</p></blockquote><h3 id="client"><a href="#client" class="headerlink" title="* client"></a>* client</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">js client 获取cookies示例<span class="token keyword">function</span> <span class="token function">WebSocketTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"WebSocket"</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 打开一个 web socket</span>        <span class="token keyword">var</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"ws://127.0.0.1:4200"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 连接建立后的回调函数</span>        ws<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Web Socket 已连接上，使用 send() 方法发送数据</span>            <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">'task'</span><span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'获取ck'</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获得长连接!"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 接收到服务器消息后的回调函数</span>        ws<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">evt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span>            <span class="token keyword">var</span> received_msg <span class="token operator">=</span> evt<span class="token punctuation">.</span>data<span class="token punctuation">;</span>            <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">'params'</span><span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>name <span class="token operator">=</span> received_msg<span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span>            ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 连接关闭后的回调函数</span>        ws<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭 websocket</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"连接已关闭..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 浏览器不支持 WebSocket</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"您的浏览器不支持 WebSocket!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>以上是一个获取cookie的demo，可以再此基础上扩展自己的功能，根据server发送来的任务，调用不同的方法，操作tab页，发送请求等等<br>将结果和任务Id，封装后交给server去处理，比如hook XHR请求，改写方法，将所有的请求信息拿下来，但不发送，交由自己的爬虫去带参请求</p></blockquote><blockquote><p>以上只是一个思路，想要完善还需要更加详细的了解WebAPI，以及如何并发等等问题，一但功能丰富起来，就是一个web逆向通杀方案</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 逆向思路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frida安装配置</title>
      <link href="2021/05/17/frida%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>2021/05/17/frida%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>总共需要</p></blockquote><ul><li><ol><li>windows frida安装</li></ol></li><li><ol start="2"><li>手机frida-server安装</li></ol></li></ul><h2 id="windows-frida安装"><a href="#windows-frida安装" class="headerlink" title="windows frida安装"></a>windows frida安装</h2><blockquote><p>需要具备python环境，有pip</p></blockquote><h3 id="安装frida"><a href="#安装frida" class="headerlink" title="安装frida"></a>安装frida</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip install fridapip install frida-tools <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>pip list 查看安装情况</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip listfrida                  14.2.18frida-tools            9.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安卓手机-安装frida-server"><a href="#安卓手机-安装frida-server" class="headerlink" title="安卓手机 安装frida-server"></a>安卓手机 安装frida-server</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>根据pip 安装的frida 版本 前往github下载对应server版本</p></blockquote><p><a href="https://github.com/frida/frida/releases">下载</a></p><blockquote><p>打开下载页面后，往下翻找到 frida版本下 frida-server 找到安卓版<br><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/frida-releases.png" alt="img"></p></blockquote><blockquote><ul><li>CPU架构和位数：<br>armeabi-v7a ——-（32位ARM设备）<br>arm64-v8a ——-（64位ARM设备）</li><li>查看手机cpu型号</li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;&#x2F; 数据线连接忽略此操作PS C:\Users\alldemensions&gt; adb connect 192.168.6.211:5666connected to 192.168.6.211:5666&#x2F;&#x2F; 查看cpu信息PS C:\Users\alldemensions&gt; adb shell getprop ro.product.cpu.abiarmeabi-v7a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>所以我这里下载frida-server-14.2.18-android-arm.xz版本就可以了<br>下载后解压得到文件，将文件push到手机设备上</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">adb push 解压后文件名 &#x2F;data&#x2F;local&#x2F;tmp&#x2F;&#x2F; 进入手机adb shell   (多个设备的话： adb -s 设备名 shell  ；设备名可以adb devices查看)&#x2F;&#x2F; root权限su&#x2F;&#x2F; 进入push到的文件目录cd data&#x2F;local&#x2F;tmp&#x2F;&#x2F; 修改文件执行权限chmod 777 解压后文件名&#x2F;&#x2F;查看权限ls -al-rwxrwxrwx root     root     17673940 2021-05-17 16:08 fds14.2.18-ad-arm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;&#x2F; 端口转发 (注意：这里在Windows终端中执行)adb forward tcp:27042 tcp:27042adb forward tcp:27043 tcp:27043&#x2F;&#x2F; 在手机中(adb shell操作后)启动serverroot@generic:&#x2F;data&#x2F;local&#x2F;tmp # pwd&#x2F;data&#x2F;local&#x2F;tmproot@generic:&#x2F;data&#x2F;local&#x2F;tmp # .&#x2F;fds14.2.18-ad-arm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果堵塞在这里，没有错误输出，就是启动成功了</p></blockquote><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>回到Windows终端中</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">PS C:\Users\alldemensions&gt; frida-ps -U  PID  Name-----  ------------------------------23390  adbd23901  android.process.acore24085  android.process.media26492  com.alimama.moon26622  com.alimama.moon:pushservice24064  com.android.dialer24173  com.android.inputmethod.latin23808  com.android.launcher323738  com.android.phone24114  com.android.providers.calendar...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>至此，全部安装已经完成，可以进行逆向分析调试了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> frida </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frida安装 </tag>
            
            <tag> Android逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令记录</title>
      <link href="2021/05/07/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
      <url>2021/05/07/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="git-push-相关"><a href="#git-push-相关" class="headerlink" title="git push 相关"></a>git push 相关</h2><h3 id="将本地指定分支，推送到远程指定分支"><a href="#将本地指定分支，推送到远程指定分支" class="headerlink" title="将本地指定分支，推送到远程指定分支"></a>将本地指定分支，推送到远程指定分支</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git push 远程主机名 本地分支名:远程分支名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>远程主机名</strong><br>    <em>1.可以直接填git地址</em><br>    选择一种即可<br>    http: <code>https://XXX.com/XXX/XXX.git</code><br>    ssh: <code>git@XXX.com:XXX/XXX.git</code><br>    <em>2.通过命令设置</em><br>    <code>git remote add 远程主机名 url</code></p></blockquote><h3 id="将当前分支，推送到远程服务器"><a href="#将当前分支，推送到远程服务器" class="headerlink" title="将当前分支，推送到远程服务器"></a>将当前分支，推送到远程服务器</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ git remote show origin* remote origin  Fetch URL: https:&#x2F;&#x2F;XXX.com&#x2F;XXX&#x2F;XXX.git  Push  URL: https:&#x2F;&#x2F;XXX.com&#x2F;XXX&#x2F;XXX.git  HEAD branch: master  Remote branches:    hexo   tracked    master tracked  Local branch configured for &#39;git pull&#39;:   # 默认pull的分支    XXX1 merges with remote XXX1    XXX2 merges with remote XXX2  Local ref configured for &#39;git push&#39;:   # 默认push的分支    XXX1 pushes to XXX1 (up to date)    XXX2 pushes to XXX2 (up to date)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>根据当前本地所在分支，直接git push/pull ，会根据以上默认配置进行push/pull<br>$ git branch</p></blockquote><ul><li>XXX1<br>本地在XXX1，则会默认push/pull远程的XXX1</li></ul><h2 id="git-pull-相关"><a href="#git-pull-相关" class="headerlink" title="git pull 相关"></a>git pull 相关</h2><h3 id="放弃本地修改，强制拉取远程更新"><a href="#放弃本地修改，强制拉取远程更新" class="headerlink" title="放弃本地修改，强制拉取远程更新"></a>放弃本地修改，强制拉取远程更新</h3><p><em>1. stash 暂存（推荐）</em></p><blockquote><p>git stash可以将代码暂时保存，不会因为本地修改，而影响对远程分支的代码pull/push，又可以保留现在的项目进度</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">首先，将所有代码添加至暂存区：git add .然后，将代码临时保存：git stash此时代码会重置到修改前的状态，可以同步远程仓库区了。git pull同步后，如果还想继续修改原来的代码，可将临时代码恢复至工作区：git stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>更多用法可以参考<a href="https://www.cnblogs.com/zndxall/archive/2018/09/04/9586088.html">git stash</a></strong></p><p><em>2.reset 回退</em></p><blockquote><p>reset 比较暴力，可适用于 代码在工作区、暂存区、仓库区等任何场景，重置后不可恢复，需要确认，你完全放弃当前的修改。</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git fetch --allgit reset --hard origin&#x2F;mastergit pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>git fetch 指令是下载远程仓库最新内容，不做合并。</code><br><code>git reset 指令把HEAD指向master最新版本。</code></p><blockquote><p><strong>更多用法</strong><br>reset –hard：重置后不保留暂存区和工作区<br>reset –soft：保留工作区，并把重置 HEAD 所带来的新的差异放进暂存区（此时代码的变更状态相当于执行完 git add命令）<br>reset –mixed：reset的默认参数，保留工作目录，并重置暂存区（此时代码的变更状态相当于执行 git add命令之前）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何过最新5秒盾，也就是cloudflare</title>
      <link href="2021/04/20/%E5%A6%82%E4%BD%95%E8%BF%87%E6%9C%80%E6%96%B05%E7%A7%92%E7%9B%BE%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AFcloudflare/"/>
      <url>2021/04/20/%E5%A6%82%E4%BD%95%E8%BF%87%E6%9C%80%E6%96%B05%E7%A7%92%E7%9B%BE%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AFcloudflare/</url>
      
        <content type="html"><![CDATA[<h2 id="本测试在2021-04-20-10-49-46-亲测可行"><a href="#本测试在2021-04-20-10-49-46-亲测可行" class="headerlink" title="本测试在2021-04-20 10:49:46, 亲测可行"></a>本测试在2021-04-20 10:49:46, 亲测可行</h2><blockquote><p>利用pypi找到包，安装后即可使用，<a href="https://pypi.org/project/cloudscraper/">安装地址及说明</a></p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> cloudscraper   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> scraper <span class="token operator">=</span> cloudscraper<span class="token punctuation">.</span>create_scraper<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># returns a CloudScraper instance</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token comment"># Or: scraper = cloudscraper.CloudScraper()  # CloudScraper inherits from requests.Session</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>scraper<span class="token punctuation">.</span>get<span class="token punctuation">(</span>"https<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>aspi<span class="token punctuation">.</span>org<span class="token punctuation">.</span>au<span class="token operator">/</span>search?f<span class="token operator">%</span><span class="token number">5B0</span><span class="token operator">%</span><span class="token number">5D</span><span class="token operator">=</span><span class="token builtin">type</span><span class="token operator">%</span>3Areport<span class="token operator">&amp;</span>sort_by<span class="token operator">=</span>field_publication_date_common<span class="token operator">&amp;</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> search_api_fulltext<span class="token operator">=</span><span class="token operator">&amp;</span>d<span class="token operator">%</span>5Bmin<span class="token operator">%</span><span class="token number">5D</span><span class="token operator">=</span><span class="token operator">&amp;</span>d<span class="token operator">%</span>5Bmax<span class="token operator">%</span><span class="token number">5D</span><span class="token operator">=</span><span class="token operator">&amp;</span>topics<span class="token operator">=</span><span class="token operator">&amp;</span>field_author_common<span class="token operator">=</span><span class="token operator">&amp;</span>field_program_tags_common<span class="token operator">=</span>All"<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 反爬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 反爬 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy 将str类型 html字符串，转为scrapy的response对象</title>
      <link href="2021/04/16/scrapy-%E5%B0%86str%E7%B1%BB%E5%9E%8B-html%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E8%BD%AC%E4%B8%BAscrapy%E7%9A%84response%E5%AF%B9%E8%B1%A1/"/>
      <url>2021/04/16/scrapy-%E5%B0%86str%E7%B1%BB%E5%9E%8B-html%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E8%BD%AC%E4%B8%BAscrapy%E7%9A%84response%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p><img src="http://image.wufazhuce.com/FmYSTDrtrkf8Kbg8K9KbnFfejW1T" alt="img"></p><h3 id="以下内容为，如何将str类型的-html文本转为-scrapy的response对象"><a href="#以下内容为，如何将str类型的-html文本转为-scrapy的response对象" class="headerlink" title="以下内容为，如何将str类型的 html文本转为 scrapy的response对象"></a>以下内容为，如何将str类型的 html文本转为 scrapy的response对象</h3><blockquote><p>这么做的好处是, 转为scrapy自身的response对象,<br>就可以使用response.css(),<br>就可以使用response.xpath(),<br>就可以使用response.json(),<br>等方法, 当然你也可以使用 lxml 进行处理, 我这里是为了方便统一大量的爬虫书写规范</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>http <span class="token keyword">import</span> HtmlResponse<span class="token comment"># content为待转换的html文本，如：'&lt;p>balabalbablabla&lt;/p>'</span>html <span class="token operator">=</span> HtmlResponse<span class="token punctuation">(</span>            url<span class="token operator">=</span>response<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token comment"># 设置一个url, 推荐当前使用方式</span>            body<span class="token operator">=</span>content<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token comment"># 选择编码格式</span>        <span class="token punctuation">)</span><span class="token comment"># 现在 html 就是我们转换后的 response类型对象, 可以进行 html.css(), html.xpath()等操作了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scrapy对象的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy 的POST和GET请求</title>
      <link href="2021/04/16/scrapy-%E7%9A%84POST%E8%AF%B7%E6%B1%82/"/>
      <url>2021/04/16/scrapy-%E7%9A%84POST%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h2 id="scrapy构造POST和GET请求的方式"><a href="#scrapy构造POST和GET请求的方式" class="headerlink" title="scrapy构造POST和GET请求的方式"></a>scrapy构造POST和GET请求的方式</h2><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><h4 id="scrapy-FormRequest"><a href="#scrapy-FormRequest" class="headerlink" title="scrapy.FormRequest"></a>scrapy.FormRequest</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">yeild scrapy<span class="token punctuation">.</span>FormRequest<span class="token punctuation">(</span>    url<span class="token operator">=</span><span class="token string">'https://........'</span><span class="token punctuation">,</span>     method<span class="token operator">=</span><span class="token string">'post'</span><span class="token punctuation">,</span>  <span class="token comment"># 选择post</span>    dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token comment"># 关闭去重, 非必须</span>    formdata<span class="token operator">=</span>data<span class="token punctuation">,</span> <span class="token comment"># post 数据根据情况 选择是  dict类型: data / json字符串类型: json.dumps(data)</span>    callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="scrapy-Request"><a href="#scrapy-Request" class="headerlink" title="scrapy.Request"></a>scrapy.Request</h4><blockquote><p>跟我们平时用get请求的方法一样</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>        method<span class="token operator">=</span><span class="token string">'POST'</span><span class="token punctuation">,</span><span class="token comment"># 选择post</span>        url<span class="token operator">=</span><span class="token string">'https://...'</span><span class="token punctuation">,</span>         body<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 注意这里的key: body 就是指你需要请求的post data, 同样post 数据根据情况 选择是  dict类型: data / json字符串类型: json.dumps(data)</span>        headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> <span class="token comment"># dict 类型</span>        callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><h4 id="一般GET请求"><a href="#一般GET请求" class="headerlink" title="一般GET请求"></a>一般GET请求</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                      headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>                     cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>                     callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_article<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="有params的GET请求"><a href="#有params的GET请求" class="headerlink" title="有params的GET请求"></a>有params的GET请求</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'widen'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>    <span class="token string">'tadrequire'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'https://www....'</span><span class="token punctuation">,</span>                      method<span class="token operator">=</span><span class="token string">'GET'</span><span class="token punctuation">,</span>                     body<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span>                     headers<span class="token operator">=</span>FatherSpider<span class="token punctuation">.</span>formatHeader<span class="token punctuation">(</span>self<span class="token punctuation">.</span>hd<span class="token punctuation">)</span><span class="token punctuation">,</span>                      callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="请求参数设置方法"><a href="#请求参数设置方法" class="headerlink" title="请求参数设置方法"></a>请求参数设置方法</h2><h3 id="GET请求-查询字符串"><a href="#GET请求-查询字符串" class="headerlink" title="GET请求 查询字符串"></a>GET请求 查询字符串</h3><h4 id="1-使用FormRequest"><a href="#1-使用FormRequest" class="headerlink" title="1. 使用FormRequest"></a>1. 使用FormRequest</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://careers.tencent.com/tencentcareer/api/post/Query?'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>        params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"timestamp"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"countryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"cityId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"bgIds"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"productId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"categoryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"parentCategoryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"attrId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"keyword"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"pageIndex"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token string">"pageSize"</span><span class="token punctuation">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span>            <span class="token string">"language"</span><span class="token punctuation">:</span> <span class="token string">"zh-cn"</span><span class="token punctuation">,</span>            <span class="token string">"area"</span><span class="token punctuation">:</span> <span class="token string">"cn"</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>FormRequest<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                                 method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token punctuation">,</span>                                 formdata<span class="token operator">=</span>params<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-使用urlencode"><a href="#2-使用urlencode" class="headerlink" title="2. 使用urlencode"></a>2. 使用urlencode</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlencode<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://careers.tencent.com/tencentcareer/api/post/Query?'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>        params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"timestamp"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"countryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"cityId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"bgIds"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"productId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"categoryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"parentCategoryId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"attrId"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"keyword"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"pageIndex"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token string">"pageSize"</span><span class="token punctuation">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span>            <span class="token string">"language"</span><span class="token punctuation">:</span> <span class="token string">"zh-cn"</span><span class="token punctuation">,</span>            <span class="token string">"area"</span><span class="token punctuation">:</span> <span class="token string">"cn"</span>        <span class="token punctuation">&#125;</span>        url <span class="token operator">=</span> url <span class="token operator">+</span> urlencode<span class="token punctuation">(</span>params<span class="token punctuation">)</span>        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                             method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="请求-payload-GET"><a href="#请求-payload-GET" class="headerlink" title="请求 payload (GET)"></a>请求 payload (GET)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> jsonpayload<span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"page"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>     <span class="token string">"size"</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>     <span class="token string">"searchKeys"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"companyNameCN"</span><span class="token punctuation">,</span> <span class="token string">"companyNameEN"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"isSearch"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>    <span class="token string">"selectAndMap"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"categoryId"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"boothAreaSearch"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"boothNumber"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"orderModel"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"order"</span><span class="token punctuation">:</span> <span class="token string">"asc"</span><span class="token punctuation">,</span>         <span class="token string">"properties"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"companyNamePinyin"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"selectOrMap"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"isPovertyAlleviation"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"isFirstJoin"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"isContinuousJoin"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"isBrand"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"exhibitorType"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"productTrait"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"isCfWinner"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"tradeTypes"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"isGreenAward"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"isInvitationAward"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token string">"searchValue"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                      method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token punctuation">,</span>                      body<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">)</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="POST请求-参数"><a href="#POST请求-参数" class="headerlink" title="POST请求 参数"></a>POST请求 参数</h3><h4 id="字符串格式表单-Tue-Jun-29-14-01-10-2021"><a href="#字符串格式表单-Tue-Jun-29-14-01-10-2021" class="headerlink" title="字符串格式表单 (Tue Jun 29 14:01:10 2021)"></a>字符串格式表单 (Tue Jun 29 14:01:10 2021)</h4><p><img src="https://gitee.com/PineKer/myfiles/raw/master/blog/20210629_scrapy_post_params.png" alt="例如"></p><blockquote><p>直接使用 <code>json.dumps(params_data)</code> 不符合格式要求，所以采用 <code>urlencode</code></p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">params_data <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">(</span><span class="token string">'page'</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>the_page<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_name'</span><span class="token punctuation">,</span> <span class="token string">'defence_news_list_beta'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_display_id'</span><span class="token punctuation">,</span> <span class="token string">'panel_pane_list3x3_all'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_args'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_path'</span><span class="token punctuation">,</span> <span class="token string">'all-news'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_base_path'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'view_dom_id'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>params_view_dom_id<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'pager_element'</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_html_ids[]'</span><span class="token punctuation">,</span> <span class="token string">'global_nav_main_wrapper'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_html_ids[]'</span><span class="token punctuation">,</span> <span class="token string">'global_nav_sitemap_responsive'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">(</span><span class="token string">'ajax_html_ids[]'</span><span class="token punctuation">,</span> <span class="token string">'edit-field-related-curated-topic-target-id'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_html_ids[]'</span><span class="token punctuation">,</span> <span class="token string">'edit-submit-defence-news-list-beta'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_html_ids[]'</span><span class="token punctuation">,</span> <span class="token string">'edit-reset'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_page_state[theme]'</span><span class="token punctuation">,</span> <span class="token string">'defencenewsalpha'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_page_state[theme_token]'</span><span class="token punctuation">,</span> jsonpath<span class="token punctuation">(</span>Drupal_settings<span class="token punctuation">,</span> <span class="token string">'$..theme_token'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_page_state[css][modules/system/system.base.css]'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ajax_page_state[js][sites/default/themes/custom/bootstrap/js/misc/ajax.js]'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span>post_data <span class="token operator">=</span> urlencode<span class="token punctuation">(</span>params_data<span class="token punctuation">)</span><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>    url<span class="token operator">=</span>url<span class="token punctuation">,</span>     method<span class="token operator">=</span><span class="token string">'post'</span><span class="token punctuation">,</span>  <span class="token comment"># 选择post</span>    headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>    dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token comment"># 关闭去重</span>    body<span class="token operator">=</span>post_data<span class="token punctuation">,</span> <span class="token comment"># post 数据根据情况 选择是  dict类型: data / json字符串类型: json.dumps(data)</span>    callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_page<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scrapy请求方式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python list格式的str, 转换成list类型</title>
      <link href="2021/04/16/python-list%E6%A0%BC%E5%BC%8F%E7%9A%84str-%E8%BD%AC%E6%8D%A2%E6%88%90list%E7%B1%BB%E5%9E%8B/"/>
      <url>2021/04/16/python-list%E6%A0%BC%E5%BC%8F%E7%9A%84str-%E8%BD%AC%E6%8D%A2%E6%88%90list%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="今天遇到一个list格式的str，我想重新转回list类型"><a href="#今天遇到一个list格式的str，我想重新转回list类型" class="headerlink" title="今天遇到一个list格式的str，我想重新转回list类型"></a>今天遇到一个list格式的str，我想重新转回list类型</h2><blockquote><p>待转换目标：</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">172</span><span class="token punctuation">]</span><span class="token punctuation">:</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"TemplateId":(.*?),'</span><span class="token punctuation">,</span>rsp<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">172</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'["&#123;652B0562-7D75-46D2-A6A6-C63CF833AE3A&#125;"]'</span>In <span class="token punctuation">[</span><span class="token number">173</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"TemplateId":(.*?),'</span><span class="token punctuation">,</span>rsp<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">173</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="首先想到的是-list-方法-结果"><a href="#首先想到的是-list-方法-结果" class="headerlink" title="首先想到的是 list() 方法, 结果"></a>首先想到的是 list() 方法, 结果</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">174</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"TemplateId":(.*?),'</span><span class="token punctuation">,</span>rsp<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">174</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'['</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'&#123;'</span><span class="token punctuation">,</span> <span class="token string">'6'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>很明显, 这不是我想要的结果</p></blockquote><h3 id="最后借助-json-loads-成功转换"><a href="#最后借助-json-loads-成功转换" class="headerlink" title="最后借助 json.loads 成功转换"></a>最后借助 json.loads 成功转换</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">175</span><span class="token punctuation">]</span><span class="token punctuation">:</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'"TemplateId":(.*?),'</span><span class="token punctuation">,</span>rsp<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">175</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'&#123;652B0562-7D75-46D2-A6A6-C63CF833AE3A&#125;'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 字符串处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy 重定向解决</title>
      <link href="2021/04/15/scrapy-%E9%87%8D%E5%AE%9A%E5%90%91%E8%A7%A3%E5%86%B3/"/>
      <url>2021/04/15/scrapy-%E9%87%8D%E5%AE%9A%E5%90%91%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="只需要在每次构造请求前-在meta中添加如下信息即可-settings中如果有默认user-agent，又非本次请求的网站头也建议注释掉"><a href="#只需要在每次构造请求前-在meta中添加如下信息即可-settings中如果有默认user-agent，又非本次请求的网站头也建议注释掉" class="headerlink" title="只需要在每次构造请求前, 在meta中添加如下信息即可,settings中如果有默认user-agent，又非本次请求的网站头也建议注释掉"></a>只需要在每次构造请求前, 在meta中添加如下信息即可,settings中如果有默认user-agent，又非本次请求的网站头也建议注释掉</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>    url<span class="token punctuation">,</span>     callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>     dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token comment"># Scrapy是默认过滤掉重复的请求URL, 关闭它</span>    meta<span class="token operator">=</span><span class="token punctuation">&#123;</span>         <span class="token string">'dont_redirect'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token comment"># 不允许重定向</span>        <span class="token string">'handle_httpstatus_list'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">301</span><span class="token punctuation">,</span><span class="token number">302</span><span class="token punctuation">]</span> <span class="token comment"># 允许的响应 code</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="如果你需要重定向后的请求那么，需要改为："><a href="#如果你需要重定向后的请求那么，需要改为：" class="headerlink" title="如果你需要重定向后的请求那么，需要改为："></a>如果你需要重定向后的请求那么，需要改为：</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>    url<span class="token punctuation">,</span>     callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>     dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token comment"># Scrapy是默认过滤掉重复的请求URL, 关闭它</span>    meta<span class="token operator">=</span><span class="token punctuation">&#123;</span>         <span class="token string">'dont_redirect'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token comment"># 允许重定向</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样就可以拿到重定向后的数据</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scrapy </tag>
            
            <tag> 重定向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用hexo搭建博客，并配置主题</title>
      <link href="2021/04/12/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98/"/>
      <url>2021/04/12/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%B9%B6%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>安装以下内容所需环境：npm，git</p></blockquote><ol><li><p>hexo</p></li><li><p>hexo-theme-argon</p></li><li><p><a href="https://hexo.bootcss.com/docs/index.html">安装hexo文档</a></p><blockquote><p>hexo 安装后进入你安装的目录/themes下，下载主题</p></blockquote></li><li><p>下载主题，<a href="https://github.com/solstice23/hexo-theme-argon">主题地址</a></p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 在 你的目录&#x2F;themes 下进行clone    1. git clone https:&#x2F;&#x2F;github.com&#x2F;solstice23&#x2F;hexo-theme-argon.git    2. 将下载的主题更名为：argon<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>配置主题相关修改</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 在 Hexo 你的目录&#x2F;_config.yml 中将 theme 项改为 argon# 将 Hexo 你的目录&#x2F;themes&#x2F;argon&#x2F;_config.yml 复制到 ，你的目录&#x2F;source&#x2F;_data（没有则自建） 文件夹中，并重命名为 argon.yml# 在 你的目录&#x2F;themes 下操作    1. npm install hexo-generator-search --save# 在 Hexo 你的目录&#x2F;_config.yml 下操作    注意缩进    1. search:          path: search.xml          field: post          content: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动即可预览</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 在 你的目录&#x2F; 下操作hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> themes </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
